build time -- 2022-06-16 16:29:32.873695
  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
  Beginning Test, file ESMF_ArrayCreat  Beginning Test, file ESMF_ArrayCreateGetUTest  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, lin  NUMBER_OF_PROCESSORS 4
  PASS  Testing AeGetUTest.F90, line 97
 .F90, line 97
  NUMBEe 97
  NUMBER_OF_PROCESSORrray IsCreated for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 118
 NUMBER_OF_PROCESSORS 4
R_OF_PROCESSORS 4
S 4
   PASS  Testing Array IsCreated for uncreated object, ESMF_ArrayCreateGetU  PASS  Testing  PASS  Testing Array IsCreated PASS  Testing Array IsCreated for uncreaTest.F90, line 125
 Array IsCreated for uncreated object, E for uncreated object, ESMF_ArrayCreateGted object, ESMF_ArrayCreateGetUTest.F90SMF_ArrayCreateGetUTest.F90, lietUTest.F90, line 118
, line 118
  Pne 118
  PASS  PASS  Testing AASS  Testing Array IsCreated f  Testing Array IsCreated for rray IsCreated for uncreated oor uncreated object, ESMF_Arrayuncreated object, ESMF_ArrayCrebject, ESMF_ArrayCreateGetUTesCreateGetUTest.F90, line 125
ateGetUTest.F90, line 125
t.F90, line 125
  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 143
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 150
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 157
  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 164
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 171
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 178
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 186
  PASS  Array equality before assignment Test, ESMF_ArrayCreateGetUTest.F90  PASS  Create  PASS  Create test Array fo  PASS  Create test Array for IsCreate, line 193
  PASS  Array assignment and equality Test, ESMF_ArrayCreat test Array for IsCreated, ESMF_ArrayCreater IsCreated, ESMF_ArrayCreateGetUTest.F90, d, ESMF_ArrayCreateGetUTest.F90, line 143
eGetUTest.F90, line 202
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGeGetUTest.F90, line 143
line 143
  PAStUTest.F90, line 209
  PASS  Array equality after d  PASS  Testing Array S  Testing Array IsCreated for c  PASS  Testing Array IsCreated for created obestroy Test, ESMF_ArrayCreateGetUTest.F90, line 217
  PASS  Array non-IsCreated for created object, ESMF_ArrayCrreated object, ESMF_ArrayCreateGetUTest.Fject, ESMF_ArrayCreateGetUTest.F90, line equality after destroy Test, ESMF_ArrayCreateGetUTest.F90, line 225
 eateGetUTest.F90, line 150
90, line 150
  PASS  T150
  PASS  Testing Ar PASS  Double ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 232
  PASS  Testing Array IsCreated for cesting Array IsCreated for created objeray IsCreated for created object, ESMF_Areated object, ESMF_ArrayCreatect, ESMF_ArrayCreateGetUTest.F90,rrayCreateGetUTest.F90, line 157
GetUTest.F90, line 157
 line 157
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 rank inc  PASS  Dest  PASS  Destroy test Array  PASS  Destroy test Array for IsCreatonsistency Test, ESMF_ArrayCreateGetUTest.F90, line 241
roy test Array for IsCreated, ESMF_ArrayC for IsCreated, ESMF_ArrayCreateGetUTested, ESMF_ArrayCreateGetUTest.F90, line 1  PASS  ArrayCreate Allocate 2D ESMF_TYPEKINDreateGetUTest.F90, line 164
.F90, line 164
  PASS  T64
  PASS  Testing Arr_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 249
  PASS  Testing Array IsCreated for esting Array IsCreated for destroyed objay IsCreated for destroyed object, ESMF_  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 256
destroyed object, ESMF_ArrayCreateGetUTeect, ESMF_ArrayCreateGetUTest.F90, line ArrayCreateGetUTest.F90, line 171
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 263
st.F90, line 171
  171
  PASS  Testing PASS  Testing Array IsArray IsCreated for des  PASS  Testing Array IsCreated for destroyed object,  PASS  ArrayCreatCreated for destroyed object, ESMF_ArrayCretroyed object, ESMF_ArrayCreateGetUTest.F ESMF_ArrayCreateGetUTest.F90, line 178
e Allocate 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 277ateGetUTest.F90, line 178
90, line 178

  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 285
  PASS  ArrayC  PASS  ArrayCreate Al--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec  PASS  ArrayCreate Allocate 2D ESMF_TYPreate Allocate 2D ESMF_TYPEKIND_R8 Test,locate 2D ESMF_TYPEKIND_R8 Test, ESMF_Ar
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
EKIND_R8 Test, ESMF_ArrayCreateGetUTest. ESMF_ArrayCreateGetUTest.F90, line 186
rayCreateGetUTest.F90, line 186
F90, line 186
  P  PASS  Array equali  PASS  Array equality before {}ASS  Array equality before assignment Testty before assignment Test, ESMF_ArrayCreaassignment Test, ESMF_ArrayCreateGetUTestArray typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1d34040:
            rank = 2, typekind = 6, base_addr = 0x7fd6986f6740
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
( 6, 1) =  0
( 7, 1) =  0
( 8, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
( 4,12) =  0
( 5,12) =  0
( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
, ESMF_ArrayCreateGetUTest.F90, line 193
teGetUTest.F90, line 193
.F90, line 193
  PASS  Adim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 292  PASS  Array assignment a  PASS  Array assignment and equality Tesrray assignment and equality Test, ESMF_A
nd equality Test, ESMF_ArrayCreateGetUTet, ESMF_ArrayCreateGetUTest.F90, line 202rrayCreateGetUTest.F90, line 202
 Array name: MyArray with ArraySpec                                                   st.F90, line 202
  
  PASS  ArrayDestroy       
  PASS  ArrayGet arrayspec and name, 2D ESMF_TYPEKIND_R8 TPASS  ArrayDestroy Test, ESMF_Ar Test, ESMF_ArrayCreateGetUTest  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 20est, ESMF_ArrayCreateGetUTest.F90, line 300
  PASS  Verify ArraySrayCreateGetUTest.F90, line 209
.F90, line 209
  PASS  9
  PASS  Array equalpec returned from Array, ESMF_ArrayCreateGetUTest.F90, line 306
  PASS  Array equality after destArray equality after destroy Test, ESMF_Aity after destroy Test, ESMF_ArrayCreateG  PASS  Verify name returned from Array, ESMF_ArrayCreateGetUTest.F90, line 312
roy Test, ESMF_ArrayCreateGetUTest.F90, lrrayCreateGetUTest.F90, line 217
etUTest.F90, line 217
  PASS  ArrayGet Fortran array pointeine 217
  PASS  Array  PASS  Array non-equality a  PASS  Array non-equality after destroyr, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 319
 non-equality after destroy Test, ESMF_After destroy Test, ESMF_ArrayCreateGetUT Test, ESMF_ArrayCreateGetUTest.F90, linrrayCreateGetUTest.F90, line 22est.F90, line 225
e 225
  PASS  5
  PASS  D  PASS  Double ArrayDestrDouble ArrayDestroy through alouble ArrayDestroy through aliaoy through alias Test, ESMF_Arrias Test, ESMF_ArrayCreateGetUTes Test, ESMF_ArrayCreateGetUTesayCreateGetUTest.F90, line 232
st.F90, line 232
t.F90, line 232
  P  PASS  ArrayCr  PASS  ArrayCreate ASS  ArrayCreate Allocate 2D ESMeate Allocate 2D ESMF_TYPEKIND_Allocate 2D ESMF_TYPEKIND_R8 rF_TYPEKIND_R8 rank inconsistencR8 rank inconsistency Test, ESMank inconsistency Test, ESMF_Arry Test, ESMF_ArrayCreateGetUTest.F_ArrayCreateGetUTest.F90, line 2ayCreateGetUTest.F90, line 241
F90, line 241
41
  PAS  PASS  ArrayC  PASS  Gett  PASS  ArrayCreate Allocate S  ArrayCreate Allocate 2D ESMF_TYPEKIND_reate Allocate 2D ESMF_TYPEKIND_R8 Test, ing Attribute count from an Array, ESMF_ArrayCreateGetUTest.F90, line 326
2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreatR8 Test, ESMF_ArrayCreateGetUTest.F90, liESMF_ArrayCreateGetUTest.F90, line 249
  PASS  Verify Attribute count from an Array, ESMF_ArrayCreateGetUTest.FeGetUTest.F90, line 249
ne 249
90, line 332
  PASS  A  PASS  ArraySet T  PASS  ArraySet Test, ESMrrayCreate from Copy, uninitialized Array Test, ESMF_ArrayCreateGetU  PASS  ArraySet Test, ESMF_ArrayCreateGeest, ESMF_ArrayCreateGetUTest.F90, lineF_ArrayCreateGetUTest.F90, line 256
Test.F90, line 339
tUTest.F90, line 256
 256
  PASS  Array  PASS  ArrayCreate f  PASS  ArrayDestroy Test, ESMDestroy Test, ESMF_ArrayCreateGet  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90,rom Copy (ALLOC), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 347
F_ArrayCreateGetUTest.F90, line 263
UTest.F90, line 263
 line 263
 Array name: Array007                                                                        
  PASS  ArrayGet arrayspec from Array Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 355
  PASS  Verify ArraySpec returned   PASS  ArrayCr  PASS  ArrayCreate Allocatfrom Array (ALLOC) Copy, ESMF_ArrayCreateGetUTest.F90, line 361
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKINeate Allocate 2D ESMF_TYPEKIND_R8 Test w/ e 2D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ES  PASS  ArrayGet Fortran array pointer, from Array Copy (ALLOC) Test, D_R8 Test w/ ArraySpec, ESMF_ArrayCreateGArraySpec, ESMF_ArrayCreateGetUTest.F90, MF_ArrayCreateGetUTest.F90, line 277
ESMF_ArrayCreateGetUTest.F90, line 368
etUTest.F90, line 277
line 277
  PAS  PASS  Ar  PASS  ArrayCreate AllS  ArrayCreate Allocate 2D ESMFrayCreate Allocate 2D ESMF_TYPEocate 2D ESMF_TYPEKIND_R8 Test wit_TYPEKIND_R8 Test with ArraySpec, KIND_R8 Test with ArraySpec, ESMFh ArraySpec, ESMF_ArrayCreateGetESMF_ArrayCreateGetUTest.F90, li_ArrayCreateGetUTest.F90, line 2UTest.F90, line 285
ne 285
85
--- ESMCI::Array::print start ------ ESMCI::Array::print start ---
--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec
 Status: Base = 
 Base name    = MyArray with ArraySpec
 Status: Base = Ready Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x2374830:
            rank = 2, typekind = 6, base_addr = 0x7fccfb828700
            dim[0] = 8  dim[1] = 11  
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x244d830:
            rank = 2, typekind = 6, base_addr = 0x7fb581be86b0
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
LocalArrayPrint: Array at address 0x129e830:
            rank = 2, typekind = 6, base_addr = 0x7f710b0a16e0
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  0
(10, 1) =  0
(11, 1) =  0
(12, 1) =  0

  Real, *8, Dim 2, Data values:
( 1,13) =  0
( 2,13) =  0
( 3,13) =  0
( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
( 8,13) =  0
( 1,14) =  0
( 2,14) =  0
  skipping to end ...
( 7,22) =  0
( 9,13) =  0
(10,13) =  0
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  0
( 9,14) =  0
(10,14) =  0
(11,14) =  0
  skipping to end ...
(13,22) =  0
(14,22) =  0
(15,22) =  0
( 9,23) =  0
(10,23) =  0
(11,23) =  0
(12,23) =  0
  PASS  Verify Array vs Array Cop(13, 1) =  0
(14, 1) =  0
(15, 1) =  0
( 9, 2) =  0
(10, 2) =  0
(11, 2) =  0
  skipping to end ...
(13,11) =  0
(14,11) =  0
(15,11) =  0
( 9,12) =  0
(10,12) =  0
(11,12) =  0
(12,12) =  0
(13,12) =  0
(14,12) =  0
(15,12) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  ( 8,22) =  0
( 1,23) =  0
( 2,23) =  0
( 3,23) =  0
( 4,23) =  0
( 5,23) =  0
( 6,23) =  0
( 7,23) =  0
( 8,23) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPr(13,23) =  0
(14,23) =  0
(15,23) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_Ty (ALLOC) no data copy, ESMF_ArrayCreateGetUTest.F90, line 384
PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreatYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90,MF_ArrayCreateGetUTest.F90, line 29eGetUTest.F90, line 292
 line 292
2
 Arr Array name: MyAr Array name: MyArray with Aay name: MyArray with ArraySpec    ray with ArraySpec                  rraySpec                                                                                                                              
                    
  PASS        
  PASS  ArrayGet arra  PASS  ArrayGet arrayspec and ArrayGet arrayspec and name, 2D Eyspec and name, 2D ESMF_TYPEKIND_R8name, 2D ESMF_TYPEKIND_R8 Test, ESMFSMF_TYPEKIND_R8 Test, ESMF_ArrayCre Test, ESMF_ArrayCreateGetUTest.F90,_ArrayCreateGetUTest.F90, line 300
ateGetUTest.F90, line 300
 line 300
    PASS  VerPASS  Verify ArraySpec   PASS  Verify ArraySpec returned fify ArraySpec returned from Arrayreturned from Array, ESMF_ArrayCrerom Array, ESMF_ArrayCreateGetUTe, ESMF_ArrayCreateGetUTest.F90, lateGetUTest.F90, line 306
st.F90, line 306
ine 306
    PASS  Verify n  PASS  Verify name returnePASS  Verify name returned from ame returned from Array, ESMF_Ard from Array, ESMF_ArrayCreateGe  PASS  Verify AArray, ESMF_ArrayCreateGetUTest.F90, line 3rayCreateGetUTest.F90, line 312
tUTest.F90, line 312
rray vs Array Copy (ALLOC) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 412
  PA02
  PASS  ArrayDesSS  ArrayGet Fortran arr  PASS  ArrayGet Fortran array pointer, 2D E  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKINDtroy Test, ESMF_ArrayCreateGetUTest.F90, line 409
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
ay pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ASMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTe_R8 Test, ESMF_ArrayCreateGetUTest.F90, line{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1d34cf0:
            rank = 2, typekind = 6, base_addr = 0x7fd6986f6a50
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  100
( 2, 1) =  100
( 3, 1) =  100
( 4, 1) =  100
( 5, 1) =  100
( 6, 1) =  100
( 7, 1) =  100
( 8, 1) =  100
( 1, 2) =  100
( 2, 2) =  100
  skipping to end ...
( 7,11) =  100
( 8,11) =  100
( 1,12) =  100
( 2,12) =  100
( 3,12) =  100
( 4,12) =  100
( 5,12) =  100
( 6,12) =  100
( 7,12) =  100
( 8,12) =  100
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
rrayCreateGetUTest.F90, line 319
st.F90, line 319
 319
  PASS  ArrayPrint from Copy (ALLOC) after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 416
  PASS  ArrayDestroy of Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 423
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 431
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 438
  PASS  ArrayCreate from Copy (VALUE), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 446
 Array name: Array009                                                                        
  PASS  ArrayGet arrayspec from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 454
  PASS  Verify ArraySpec returned from Array (VALUE) Copy, ESMF_ArrayCreateGetUTest.F90, line 460
  PASS  ArrayGet Fortran array pointer, from Array Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 467
  P  PASS  Getting  PASS  Getting Attribute ASS  Getting Attribute count from  Attribute count from an Array, Ecount from an Array, ESMF_ArrayCran Array, ESMF_ArrayCreateGetUTeSMF_ArrayCreateGetUTest.F90, lieateGetUTest.F90, line 326
st.F90, line 326
ne 326
  PAS  PASS  Verify Attr  PASS  Verify Attribute counS  Verify Attribute count from ibute count from an Array, ESMF_t from an Array, ESMF_ArrayCreatan Array, ESMF_ArrayCreateGetUTeArrayCreateGetUTest.F90, line 3eGetUTest.F90, line 332
st.F90, line 332
32
  PAS  PASS  ArrayCr  PASS  ArrayCreate froS  ArrayCreate from Copy, uniniteate from Copy, uninitialized Arm Copy, uninitialized Array Testialized Array Test, ESMF_ArrayCray Test, ESMF_ArrayCreateGetUTe, ESMF_ArrayCreateGetUTest.F90,reateGetUTest.F90, line 339
st.F90, line 339
  PASS  Verify Array vs Array Copy (VALUE line 339
) data copy, ESMF_ArrayCreateGetUTest.F90, line 483
  PA  PASS  ArrayCr  PASS  ArrayCreate froSS  ArrayCreate from Copy (ALLOCeate from Copy (ALLOC), 2D ESMF_m Copy (ALLOC), 2D ESMF_TYPEKIND), 2D ESMF_TYPEKIND_R8 Test, ESTYPEKIND_R8 Test, ESMF_ArrayCrea_R8 Test, ESMF_ArrayCreateGetUTMF_ArrayCreateGetUTest.F90, linteGetUTest.F90, line 347
est.F90, line 347
e 347
 Array Array name Array name: Array007    name: Array007                 : Array007                                                                                                                                                                     
                          
      
  PASS  ArrayGet arr  PASS  ArrayGet arrayspec f PASS  ArrayGet arrayspec from Aayspec from Array Copy (ALLOC) rom Array Copy (ALLOC) Test, ESrray Copy (ALLOC) Test, ESMF_ATest, ESMF_ArrayCreateGetUTest.FMF_ArrayCreateGetUTest.F90, linerrayCreateGetUTest.F90, line 35590, line 355
 355
  PA
  PASS  Ve  PASS  Verify ArraySpec returnSS  Verify ArraySpec returned frrify ArraySpec returned from Arred from Array (ALLOC) Copy, ESMom Array (ALLOC) Copy, ESMF_Arraay (ALLOC) Copy, ESMF_ArrayCreaF_ArrayCreateGetUTest.F90, lineyCreateGetUTest.F90, line 361
teGetUTest.F90, line 361
 361
    PASS  Verify Array vs Array Copy  PASS  ArraPASS  ArrayGet Fortran array poi  PASS  ArrayGet Fortran array pointer, fro (VALUE) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 501
yGet Fortran array pointer, from Array Copnter, from Array Copy (ALLOC) Test, ESMF_m Array Copy (ALLOC) Test, ESMF_ArrayCrea  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 508
y (ALLOC) Test, ESMF_ArrayCreateGetUTest.ArrayCreateGetUTest.F90, line 368
teGetUTest.F90, line 368
  PASS  ArrayDestroy of Copy (VALUE) Test, ESMF_ArrayCreateGetUTF90, line 368
est.F90, line 515
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 523
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 530
  PASS  ArrayCreate from Copy (REF), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 538
 Array name: Array011                                                                        
  PASS  ArrayGet arrayspec from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 546
  PASS  Verify ArraySpec returned from Array Copy (REF), ESMF_ArrayCreateGetUTest.F90, line 552
  PASS  ArrayGet Fortran array pointer, from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 559
  PASS  Verify Array vs Array Copy (ALLOC) no data copy, ESMF_ArrayCreateGetUTest.  PASSF90, line 384
  Verify Array vs Array Copy (ALLO  PASS  Verify Array C) no data copy, ESMF_Avs Array Copy (ALLOC) no  PASS  Verify ArrayCreateGetUTest.F90, line 384
 data copy, ESMF_ArrayCreateGetUrray vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreatTest.F90, line 384
eGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (REF) shared allocation Test2, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 600
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 607
  PASS  Verify Array vs Array Copy (ALLOC) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 402
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90,  PASS  Verif line 409
  PASS  ArrayCreate from Ptr with 3D farrayy Array vs Array Copy (ALLOC) sepa--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
 on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 616rate memory allocation, ESMF_Arr  PASS  Verify Array vs Array Copy (ALLOC) sepa{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x244e6a0:
            rank = 2, typekind = 6, base_addr = 0x7fb581be8930
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  103
(10,13) =  103
(11,13) =  103
(12,13) =  103
(13,13) =  103
(14,13) =  103

--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1d34040:
            rank = 3, typekind = 5, base_addr = 0x7fd6986f6df0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  ayCreateGetUTest.F90, line 402
rate memory allocation, ESMF_ArrayCreateGe(15,13) =  103
( 9,14) =  103
(10,14) =  103
(11,14) =  103
  skipping to end ...
(13,22) =  103
(14,22) =  103
(15,22) =  103
( 9,23) =  103
(10,23) =  103
(11,23) =  103
(12,23) =  103
(13,23) =  103
(14,23) =  103
(15,23) =  103
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
 
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint for Array  PASS  ArrayDestroy Test, ESMFtUTest.F90, line 402
 PASS  ArrayPrint from Copy (ALLOC) after oCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 623
_ArrayCreateGetUTest.F90, line 409
  PASS  ArrayDestroy Test, ESMF_Arrariginal destroy, 2D ESMF_TYPEKIND_R8 Test,  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 630
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
yCreateGetUTest.F90, line 409
 ESMF_ArrayCreateGetUTest.F90, line 416
  PASS  Deallocate returned pointer Test, ESMF_ArrayCreateGetUTest.F90, line 637
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x129f6a0:
            rank = 2, typekind = 6, base_addr = 0x7f710b0a1990
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  101
(10, 1) =  101
(11, 1) =  101
(12, 1) =  101
(13, 1) =  101
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGet(14, 1) =  101
(15, 1) =  101
( 9, 2) =  101
(10, 2) =  101
(11, 2) =  101
  skipping to end ...
(13,11) =  101
(14,11) =  101
(15,11) =  101
( 9,12) =  101
(10,12) =  101
(11,12) =  101
(12,12) =  101
(13,12) =  101
(14,12) =  101
(15,12) =  101
dim 1: [0]: [9 [9 [9, 15] 15] 15]
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x23756a0:
            rank = 2, typekind = 6, base_addr = 0x7fccfb8289d0
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  102
  PASS  ArrayDestroy of Copy (ALLOC) Test, ESMF_ArrayCUTest.F90, line 644
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (( 2,13) =  102
( 3,13) =  102
( 4,13) =  102
( 5,13) =  102
( 6,13) =  102
( 7,13) =  102
( 8,13) =  102
( 1,14) =  102
( 2,14) =  102
  skipping to end ...
( 7,22) =  102
( 8,22) =  102
( 1,23) =  102
( 2,23) =  102
( 3,23) =  102
( 4,23) =  102
( 5,23) =  102
( 6,23) =  102
( 7,23) =  102
( 8,23) =  102
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
reateGetUTest.F90, line 423
  PASS  ArrayCreate with 3D farray on 2D ALLOC) after original destroy, 2D ESMF_TY--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (ADistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 653
PEKIND_R8 Test, ESMF_ArrayCreaLLOC) after original destroy,   PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTeteGetUTest.F90, line 416
2D ESMF_TYPEKIND_R8 Test, ESMF_Ast.F90, line 660
  PASS  ArrayDrrayCreateGetUTest.F90, line 4  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with Ar  PASS  ArrayCreate with 3D farray on 2estroy of Copy (ALLOC) Test, ESMF_ArrayCrea16
  PASS  ArrayDestroraySpec, ESMF_ArrayCreateGetUTest.F90, linD DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 671
teGetUTest.F90, line 423
y of Copy (ALLOC) Test, ESMF_ArrayCreatee 431
  PASS  Arr  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 678
GetUTest.F90, line 423
ayGet Fortran array pointer, 2D ESMF_TYPEKIN  PASS  ArrayCreate wi  PASS  ArrayCreatD_R8 Test, ESMF_ArrayCreateGetUTesth 3D farrayPtr on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_e Allocate 2D ESMF_TYPEKIND_R8 Tet.F90, line 438
ArrayCreateGetUTest.F90, line 689
  PASS  Arst with ArraySpec, ESMF_ArrayCr  PASS  ArrayCreate Allocate 2D ESMF_TrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 696
eateGetUTest.F90, line 431
YPEKIND_R8 Test with ArraySpec  PASS  ArrayCreate from Copy (VALUE), 2D   PASS  Arr, ESMF_ArrayCreateGetUTest.F90, lESMF_TYPEKIND_R8 Test, ESMF_ArrayayGet Fortran array pointer, 2D ine 431
  PCreateGetUTest.F90, line 446
ESMF_TYPEKIND_R8 Test, ESMF_ArraASS  ArrayGet Fortran array poinyCreateGetUTest.F90, liter, 2D ESMF_TYPEKIND_R8ne 438
 Test, ESMF_ArrayCrea Array name: Array009                teGetUTest.F90, line 4                         PASS  ArrayCreate f38
                               rom Copy (VALUE), 2D ESMF_TYPEK  PASS  Array  
  PASS  ArrayGet arrayspecIND_R8 Test, ESMF_ArrayCreateGetCreate from Copy (VALUE), 2D ESM from Array Copy (VALUE) Test, EUTest.F90, line 446
F_TYPEKIND_R8 Test, ESMF_ArrayCSMF_ArrayCreateGetUTest.F90, lireateGetUTest.F90, line 454
 Array name: Array00ne 446
  PASS  Verify ArraySpec retur9                                Array name: Arned from Array (VALUE) Copy, ES                               ray009                         MF_ArrayCreateGetUTest.F90, line          
  PASS  ArrayGet                                460
  PASS arrayspec from Array Copy (VAL                
  PASS  Arr  ArrayGet Fortran array pointer,  PASS  AUE) Test, ESMF_ArrayCreateGetUTest.F90, line ayGet arrayspec from Array Copy (VALUE) Tes from Array Copy (VALUE) Test, ESMF_ArrayCrrrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCrea454
  PASS  Verify Arrat, ESMF_ArrayCreateGetUTest.F90, line 454
eateGetUTest.F90, line 467
teGetUTest.F90, line 708
  PASS  ArrayDestroy Test, ESMF_ArrayySpec returned from Array (VALUE) Copy, ESMCreateGetUTest.F90, line 715
F_ArrayCreateGetUTest  PASS  Verify ArraySpec returned from A  PASS  Ar.F90, line 460
rray (VALUE) Copy, ESMF_ArrayCrerayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational  PASS  ArrayGet Fortran arrateGetUTest.F90, line 460
 widths Test, ESMF_ArrayCreateGetUTest.F90, line 725
ay pointer, from Array Copy (VAL--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}UE) Test, ESMF_ArrayCr  PASS  ArrayGet Fortran array pointer,Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1d34040:
            rank = 2, typekind = 6, base_addr = 0x7fd6986f6740
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  6.94458e-310
( 2, 1) =  300
( 3, 1) =  300
( 4, 1) =  300
( 5, 1) =  300
( 6, 1) =  300
( 7, 1) =  300
( 8, 1) =  300
( 1, 2) =  300
( 2, 2) =  300
  skipping to end ...
( 7,11) =  300
( 8,11) =  300
( 1,12) =  300
( 2,12) =  300
( 3,12) =  300
( 4,12) =  300
( 5,12) =  300
( 6,12) =  300
eateGetUTest.F90, line 467
 from Array Copy (VALUE) Test, E( 7,12) =  300
( 8,12) =  -3.01583e+58
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computatiSMF_ArrayCreateGetUTestonal widths Test, ESMF_ArrayCreateGetUTest.F90.F90, line 467
, line 732
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 739
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 748
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1d38340:
            rank = 2, typekind = 6, base_addr = 0x7fd6986f6740
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  6.94458e-310
( 2, 1) =  300
( 3, 1) =  300
( 4, 1) =  300
( 5, 1) =  300
( 6, 1) =  300
( 7, 1) =  300
( 8, 1) =  300
( 1, 2) =  300
( 2, 2) =  300
  skipping to end ...
( 7,11) =  300
( 8,11) =  300
( 1,12) =  300
( 2,12) =  300
( 3,12) =  300
( 4,12) =  300
( 5,12) =  300
( 6,12) =  300
( 7,12) =  300
( 8,12) =  -3.01583e+58
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 755
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 768
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 778
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 787
  PASS  Verify Array vs Array Copy (VALUE) data copy, ESMF_ArrayCreateGetUTest.F90,  PASS  ArrayCreate Al line 483
locate 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 797
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1d34040:
            rank = 2, typekind = 6, base_addr = 0x7fd6986f6df0
            dim[0] = 12  dim[1] = 18  
  Real, *8, Dim 2, Data values:
( 0,-1) =  2.72572e-317
( 1,-1) =  3.53751e-321
( 2,-1) =  0
( 3,-1) =  0
( 4,-1) =  0
( 5,-1) =  0
( 6,-1) =  0
( 7,-1) =  0
( 8,-1) =  0
( 9,-1) =  0
  skipping to end ...
( 2,16) =  0
( 3,16) =  0
( 4,16) =  0
( 5,16) =  0
( 6,16) =  0
( 7,16) =  0
( 8,16) =  0
( 9,16) =  0
(10,16) =  0
(11,16) =  0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 804
  PASS  Ver  PASS  Arify Array vs Array Copy rayGet 2D ESMF_TYPEKIND_R8 w/ computational(VALUE) data copy, ESMFEdge and total widths Test, ESMF_ArrayCrea_ArrayCreateGetUTest.F90teGetUTest.F90, line 816
  PASS, line 483
  PASS  Verify Array vs Array Cop  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdgey (VALUE) data copy, ESMF and total widths Test, ESMF_ArrayCreateGetUTe_ArrayCreateGetUTest.F90,st.F90, line 824
  PASS  Che line 483
ck total bounds for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 834
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 855
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 864
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 871
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 885
  PASS  Verify Array vs Array Copy (VALUE) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 501
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 508
  PASS  ArrayDestroy of Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 515
  PA  PASS  ArrayCreSS  Verify Array vs Arrate Allocate 2D ESMF_ay Copy (VALUE) separTYPEKIND_R8 Test with ate memory allocationArraySpec, ESMF_ArrayC, ESMF_ArrayCreateGetUreateGetUTest.F90, Test.F90, line 501
  PASS  Veriline 523
  P  PASS  Arrfy Array vs Array Copy (VALUE) ASS  ArrayGet Fortran array poinayDestroy Test, ESMF_ArrayCreatseparate memory allocation, ESMter, 2D ESMF_TYPEKIND_R8 Test, eGetUTest.F90, line 508
F_ArrayCreateGetUTest.F90, lineESMF_ArrayCreateGetUTest.F90, li  PASS  ArrayDestroy  501
  PASne 530
of Copy (VALUE) Test, ESMF_ArraS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, yCreateGetUTest.F90, lineline 515
 508
  PASS  ArrayCreate from Copy (REF), 2D   PASS  ArrayDestroyESMF_TYPEKIND_R8 Test of Copy (VALUE) Test,, ESMF_ArrayCreateGetU  PASS  ArrayCrea ESMF_ArrayCreateGetUTest.F90, Test.F90, line 538
te Allocate 2D ESMF_TYPEKIND_R8line 515
 Test with ArraySpec, Array name: Arr ESMF_ArrayCreateGetUTay011                 est.F90, line 523
  PASS  ArrayCreat                                 PASS  Arraye Allocate 2D ESMF_TYPEKIND_R8                        
  Get Fortran array pointer, 2D E Test with ArraySpec, ESMF_ArrayPASS  ArrayGet arrayspec from ASMF_TYPEKIND_R8 Test, ESMF_ArraCreateGetUTest.F90, line 523
rray Copy (REF) Test, ESMF_ArrayyCreateGetUTest.F90, line 530
  PASS  ArrCreateGetUTest.F90, line 546
ayGet Fortran array pointer, 2D ES  PASS  Verify ArraMF_TYPEKIND_R8 Test, ESySpec returned from Arr  PASS  ArrayCreate froMF_ArrayCreateGetUTest.F90, linay Copy (REF), ESMF_ArrayCreatem Copy (REF), 2D ESMF_TYPEKIND_e 530
GetUTest.F90, line 552
R8 Test, ESMF_ArrayCreateGetUTest.F90, line  PASS  ArrayGet Fortran 538
  PASS  ArrayCreate from Copy ( array pointer, from Array Copy  Array REF), 2D ESMF_TYPEKIND_R8 Test(REF) Test, ESMF_ArrayCreateGetname: Array011                 , ESMF_ArrayCreateGetUTest.F90, UTest.F90, line 559
                               line 538
                        
  PASS Array name: Arra  ArrayGet arrayspec y011                  from Array Copy (REF)                      Test, ESMF_ArrayCreate                      GetUTest.F90, line 54           
  PASS6
  P  ArrayGet arrayspec ASS  Verify ArraySpecfrom Array Copy (REF) returned from Array C Test, ESMF_ArrayCreatopy (REF), ESMF_ArrayeGetUTest.F90, line 546CreateGetUTest.F90, lin
  PAe 552
SS  Verify ArraySpec re  PASS  ArrayGet Foturned from Array Coprtran array pointer, fy (REF), ESMF_ArrayCrearom Array Copy (REF) teGetUTest.F90, line Test, ESMF_ArrayCreat552
eGetUTest.F90, line 55  PASS  ArrayGet Fo9
rtran array pointer, from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 559
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (REF) shared allocation Test2, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 600
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 607
  PASS  Verify Array vs Array Copy (REF) shared allocation Test2, ESMF_ArrayCreateGetUTest.F90, line 593
  PASS  ArrayDestroy Test, ESM  PASS  Verify Array vF_ArrayCreateGetUTest.F9s Array Copy (REF) shar0, line 600
ed allocation Test2,   PASS  ArrayDESMF_ArrayCreateGetUTesestroy of Copy Test, ESt.F90, line 593
MF_ArrayCreateGetUTest.F90, line  PASS  ArrayDestroy Tes 607
t, ESMF_ArrayCreateGetUTest.F90, line 600
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 607
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 616
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x244d830:
            rank = 3, typekind = 5, base_addr = 0x7fb581be8c40
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 623
  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 630
  PASS  Deallocate returned po  PAinter Test, ESMF_ArraySS  ArrayCreate from CreateGetUTest.F90, linPtr with 3D farray on e 637
2D DistGrid Test as Ptr,  PASS  ArrayCreate  PASS  ArrayDestroy Test, ESM ESMF_ArrayCreateGetUTest.F90 from Ptr with 3D farray on 2D DiF_ArrayCreateGetUTest.F90, line , line 616
--- ESMCI::Array::print start ---
 Base name    = stGrid Test as Ptr, ESMF_ArrayC644
MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}reateGetUTest.F90, line 616
Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x129e830:
            rank = 3, typekind = 5, base_addr = 0x7f710b0a1cd0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x2374830:
            rank = 3, typekind = 5, base_addr = 0x7fccfb828d30
            dim[0] = 9  dim 2: [1]: [1 [1 [1, 12] 12] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  Arradim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
yPrint for ArrayCreat( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
e from Ptr Test, ESMF_A( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASSrrayCreateGetUTest.F9  ArrayPrint for Arra0, line 623
yCreate from Ptr Test  PASS, ESMF_ArrayCreateGet  ArrayGet Test, ESMUTest.F90, line 623
F_ArrayCreateGetUTest.F90, line 630
  PASS  ArrayGet Test, E  PASS  DealSMF_ArrayCreateGetUTestlocate returned pointe.F90, line 630
r Test, ESMF_ArrayCreateGetUTest.F9  PASS  Deallocate retu0, line 637
rned pointer Test, ES  PASS  ArrayDeMF_ArrayCreateGetUTest.  PASS  ArrayCreate with 3stroy Test, ESMF_ArrayCreateGetUTF90, line 637
D farray on 2D DistGrid Test, Eest.F90, line 644
  PASS  ArrayDestroy Test, ESMF_SMF_ArrayCreateGetUTest.F90, linArrayCreateGetUTest.F9e 653
0, line 644
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 660
  PAS  PASS  ArrayCS  ArrayCreate with 3Dreate with 3D farray  farray on 2D DistGrid on 2D DistGrid Test, ETest, ESMF_ArrayCreateSMF_ArrayCreateGetUTeGetUTest.F90, line 653
st.F90, line 653
  P  PASS  AASS  ArrayDestroy TestrrayDestroy Test, ESMF, ESMF_ArrayCreateGet_ArrayCreateGetUTestUTest.F90, line 660
.F90, line 660
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 671
  PASS  ArrayDestroy Test, ESMF_ArrayCreate  PASS  ArGetUTest.F90, line 678
rayCreate with 3D farray on 2D DistGrid w/ ESMF_DATACOPY_VALUE  PASS  Arra Test, ESMF_ArrayCreatyCreate with 3D farray eGetUTest.F90, line 6on 2D DistGrid w/ ESM71
F_DATACOPY_VALUE Test,   PASS  ArrayDestrESMF_ArrayCreateGetUoy Test, ESMF_ArrayCreTest.F90, line 671
ateGetUTest.F90, line 678
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 678
  PASS  PASS  ArrayCre  ArrayCreate with 3D fate with 3D farrayPtr onarrayPtr on 2D DistGrid 2D DistGrid w/ ESMF_DAT w/ ESMF_DATACOPY_VALUEACOPY_VALUE Test, ESMF_ Test, ESMF_ArrayCreatArrayCreateGetUTest.F90eGetUTest.F90, line 68, line 689
  PASS  A9
  PASS  ArrrayCreate with 3D farrayDestroy Test, ESMF  PASS  ArrayDestroy Test, ESMF_ArrayCreaterayPtr on 2D DistGrid w/ ESMF_D_ArrayCreateGetUTest.F90, line 69GetUTest.F90, line 696
ATACOPY_VALUE Test, ESMF_ArrayCre6
ateGetUTest.F90, line 689
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 696
  PASS  ArrayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUTest.F90, line 708
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 715
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 725
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x2374830:
            rank = 2, typekind = 6, base_addr = 0x7fccfb828700
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  6.94254e-310
( 2,13) =  302
( 3,13) =  302
( 4,13) =  302
( 5,13) =  302
( 6,13) =  302
( 7,13) =  302
( 8,13) =  302
( 1,14) =  302
( 2,14) =  302
  skipping to end ...
( 7,22) =  302
( 8,22) =  302
( 1,23) =  302
( 2,23) =  302
( 3,23) =  302
( 4,23) =  302
( 5,23) =  302
( 6,23) =  302
( 7,23) =  302
( 8,23) =  -3.01583e+58
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computational widths Test, ESMF_ArrayCreateGetUTest.F90, line 732
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 739
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 748
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x237a9e0:
            rank = 2, typekind = 6, base_addr = 0x7fccfb828d30
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1,13) =  2.72572e-317
( 2,13) =  3.53751e-321
( 3,13) =  0
( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
( 8,13) =  0
( 1,14) =  0
( 2,14) =  0
  skipping to end ...
( 7,23) =  0
( 8,23) =  0
( 1,24) =  0
( 2,24) =  0
( 3,24) =  0
( 4,24) =  0
( 5,24) =  0
( 6,24) =  0
( 7,24) =  0
( 8,24) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 755
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, lin  PASS  ArrayCreate wite 768
  PASSh 3D farray on 2D DistGrid w  Check total widths f/ distgridToArrayMap Teor 2D ESMF_TYPEKIND_R8st, ESMF_ArrayCreateGe w/ computationalEdge wtUTest.F90, line 708
idths Test, ESMF_ArrayCreateGetUTest  PASS  ArrayDe.F90, line 778
stroy Test, ESMF_Arra  PASS  AryCreateGetUTest.F90, l  PASS  ArrayDestroy Test, ESMF_ArrayCreateine 715
rayCreate with 3D farray on 2D DGetUTest.F90, line 787
istGrid w/ distgridToArrayMap Test  PASS  ArrayCr, ESMF_ArrayCreateGeteate Allocate 2D ESMF_TUTest.F90, line 708
YPEKIND_R8 w/ negative computatio  PASS  ArrayDenal widths Test, ESMF_Arstroy Test, ESMF_ArrayCrayCreateGetUTest.F90,reateGetUTest.F90, lin line 725
e 715
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x24506f0:
            rank = 2, typekind = 6, base_addr = 0x7fb581be86b0
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  6.93756e-310
  PASS  Array(10,13) =  303
(11,13) =  303
(12,13) =  303
(13,13) =  303
(14,13) =  303
(15,13) =  303
( 9,14) =  303
(10,14) =  303
(11,14) =  303
  skipping to end ...
(13,22) =  303
(14,22) =  303
(15,22) =  303
Create Allocate 2D ESMF( 9,23) =  303
(10,23) =  303
(11,23) =  303
(12,23) =  303
(13,23) =  303
(14,23) =  303
(15,23) =  -3.01583e+58
dim 1: [0]: [9 [10 [9, 15] 13] 15]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
_TYPEKIND_R8 w/ negat  PASS  ArrayPrint ive computational width2D ESMF_TYPEKIND_R8 w/s Test, ESMF_ArrayCrea computational widths teGetUTest.F90, line 72Test, ESMF_ArrayCreateG5
--- ESMCI::Array::print start ---
 Base name    = MyArray NegativeetUTest.F90, line 732
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):

  P{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x129e830:
            rank = 2, typekind = 6, base_addr = 0x7f710b0a16e0
            dim[0] = 7    PASS  ArrayCreate AASS  ArrayDestroy Test, ESMF_Arrdim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  6.92303e-310
(10, 1) =  301
(11, 1) =  301
(12, 1) =  301
(13, 1) =  301
(14, 1) =  301
(15, 1) =  301
( 9, 2) =  301
(10, 2) =  301
(11, 2) =  301
  skipping to end ...
(13,11) =  301
llocate 2D ESMF_TYPEKIND_R8 w/ ayCreateGetUTest.F90, line 739
(14,11) =  301
(15,11) =  301
( 9,12) =  301
(10,12) =  301
(11,12) =  301
(12,12) =  301
(13,12) =  301
(14,12) =  301
(15,12) =  -3.01583e+58
dim 1: [0]: [9 [10 [9, 15] 13] 15]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
  PcomputationalEdge and total widtASS  ArrayPrint 2D ESMhs Test, ESMF_ArrayCreF_TYPEKIND_R8 w/ compateGetUTest.F90, line 79utational widths Test, 7
--- ESMCI::Array::print start ---
ESMF_ArrayCreateGetUT Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
est.F90, line 732
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x237a9e0:
            rank = 2, typekind = 6, base_addr = 0x7fccfb829040
            dim[0] = 12    PASSdim[1] = 17  
  Real, *8, Dim 2, Data values:
( 0,11) =  0
( 1,11) =  0
( 2,11) =  0
( 3,11) =  0
( 4,11) =  0
( 5,11) =  0
( 6,11) =  0
( 7,11) =  0
( 8,11) =  0
( 9,11) =  0
  PASS  ArrayCreate Allocate   ArrayDestroy Test, ESMF_ArrayCr  skipping to end ...
( 2,27) =  0
( 3,27) =  0
( 4,27) =  0
( 5,27) =  0
( 6,27) =  0
( 7,27) =  0
( 8,27) =  0
( 9,27) =  0
(10,27) =  0
(11,27) =  0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
  PA2D ESMF_TYPEKIND_R8 w/ computatioeateGetUTest.F90, line 739
SS  ArrayPrint 2D ESMF_TYPEKIND_nalEdge widths Test, ESMF_ArrayCR8 w/ computationalEdgreateGetUTest.F90, linee and total widths Tes 748
--- ESMCI::Array::print start ---t, ESMF_ArrayCreateGe
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
tUTest.F90, line 804
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x24506f0:
            rank = 2, typekind = 6, base_addr = 0x7fb581be8c40
            dim[0] = 7    PASS  Arrdim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9,13) =  2.72572e-317
(10,13) =  3.53751e-321
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  0
( 9,14) =  0
(10,14) =  0
ayCreate Allocate 2D ES(11,14) =  0
  skipping to end ...
(13,23) =  0
(14,23) =  0
(15,23) =  0
( 9,24) =  0
(10,24) =  0
(11,24) =  0
(12,24) =  0
(13,24) =  0
(14,24) =  0
(15,24) =  0
dim 1: [0]: [9 [9 [9, 15] 13] 15]
MF_TYPEKIND_R8 w/ com  PASS  ArrayGet 2D ESMF_TYPEKdim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESputationalEdge widths Test, ESMFIND_R8 w/ computationalEdge and MF_TYPEKIND_R8 w/ computationalEd_ArrayCreateGetUTest.F90, line 74total widths Test, ESMF_ArrayCrge widths Test, ESMF_ArrayCrea8
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
eateGetUTest.F90, line 816
teGetUTest.F90, line 755
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x12a49e0:
            rank = 2, typekind = 6, base_addr = 0x7f710b0a16e0
              PASS  Check total dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  6.92303e-310
(10, 1) =  301
(11, 1) =  301
(12, 1) =  301
(13, 1) =  301
(14, 1) =  301
(15, 1) =  301
widths for 2D ESMF_TYPEK( 9, 2) =  301
(10, 2) =  301
(11, 2) =  301
  skipping to end ...
(13,11) =  301
(14,11) =  301
(15,11) =  301
( 9,12) =  301
(10,12) =  301
(11,12) =  301
(12,12) =  301
(13,12) =  301
(14,12) =  301
IND_R8 w/ computation  PASS  ArrayGet 2D ESMF_TY(15,12) =  -3.01583e+58
dim 1: [0]: [9 [9 [9, 15] 13] 15]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrinalEdge and total widths Test, ESPEKIND_R8 w/ computationalEdge widt 2D ESMF_TYPEKIND_R8 w/ computatMF_ArrayCreateGetUTest.F90, lineths Test, ESMF_ArrayCreateGetUTionalEdge widths Test, ESMF_Arra 824
  PASS  est.F90, line 768
yCreateGetUTest.F90, line 755
Check total bounds for 2D ESMF_TY  PASS  Check total widths forPEKIND_R8 w/ computat 2D ESMF_TYPEKIND_R8 w/ionalEdge and total wid computationalEdge widt  PASS  ArrayGet 2D ESMF_ths Test, ESMF_ArrayCreateGetUThs Test, ESMF_ArrayCreateGetUTesTYPEKIND_R8 w/ computationalEdest.F90, line 842
t.F90, line 778
ge widths Test, ESMF_ArrayCreat  PASS  ArrayDestroy Test  PASS  ArrayDestroy Test, EeGetUTest.F90, line 768
, ESMF_ArrayCreateGetUTest.F90, lSMF_ArrayCreateGetUTest.F90, line  PASS  Check total widine 855
 787
ths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_A  PASS  CreaterrayCreateGetUTest.F9 test Array with ESMF_P0, line 778
IN_DE_TO_PET, ESMF_Ar  PASS  ArrayDrayCreateGetUTest.F90,estroy Test, ESMF_Arra line 864
yCreateGetUTest.F90,   PASS  ArrayGetline 787
 Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 871
  PASS  ArrayDestroy Test for   PASS  ArrayCreate Alloarray with ESMF_PIN_DEcate 2D ESMF_TYPEKIND_R_TO_PET, ESMF_ArrayCre8 w/ computationalEdgeateGetUTest.F90, line and total widths Tes 885
t, ESMF_ArrayCreateGetUTest.F90, line 797
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x24506f0:
            rank = 2, typekind = 6, base_addr = 0x7fb581be8ef0
            dim[0] = 11  dim[1] = 17  
  Real, *8, Dim 2, Data values:
( 8,11) =  0
( 9,11) =  0
(10,11) =  0
(11,11) =  0
(12,11) =  0
(13,11) =  0
(14,11) =  0
(15,11) =  0
(16,11) =  0
(17,11) =  0
  skipping to end ...
( 9,27) =  0
(10,27) =  0
(11,27) =  0
(12,27) =  0
(13,27) =  0
(14,27) =  0
(15,27) =  0
(16,27) =  0
(17,27) =  0
(18,27) =  0
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---  PASS
  PASS  ArrayPri  ArrayCreate Allocant 2D ESMF_TYPEKIND_R8 te 2D ESMF_TYPEKIND_R8 w/ computationalEdge aw/ computationalEdge nd total widths Test, and total widths Test, ESMF_ArrayCreateGetUTesESMF_ArrayCreateGetUTt.F90, line 804
est.F90, line 797
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
  PASS  ArrayGet{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
 2D ESMF_TYPEKIND_R8 w/LocalArrayPrint: Array at address 0x129e830:
            rank = 2, typekind = 6, base_addr = 0x7f710b0a1cd0
            dim[0] = 11  dim[1] = 18  
  Real, *8, Dim 2, Data values:
( 8,-1) =  2.72572e-317
( 9,-1) =  3.53751e-321
(10,-1) =  0
(11,-1) =  0
(12,-1) =  0
 computationalEdge and t(13,-1) =  0
(14,-1) =  0
(15,-1) =  0
(16,-1) =  0
(17,-1) =  0
  skipping to end ...
( 9,16) =  0
(10,16) =  0
(11,16) =  0
(12,16) =  0
(13,16) =  0
(14,16) =  0
(15,16) =  0
otal widths Test, ESMF_(16,16) =  0
(17,16) =  0
(18,16) =  0
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
  PASS  ArrayCreateGetUTest.F9ArrayPrint 2D ESMF_T0, line 816
YPEKIND_R8 w/ computati  PASS  Check totaonalEdge and total widl widths for 2D ESMF_ths Test, ESMF_ArrayCTYPEKIND_R8 w/ computatreateGetUTest.F90, lineionalEdge and total w 804
idths Test, ESMF_ArrayCreateGetUTes  Pt.F90, line 824
ASS  ArrayGet 2D ESMF_TYPEKIND_R8   PASS  Check total bw/ computationalEdge aounds for 2D ESMF_TYPEKnd total widths Test, EIND_R8 w/ computationSMF_ArrayCreateGetUTealEdge and total widthst.F90, line 816
s Test, ESMF_ArrayCre  PASS  CheateGetUTest.F90, line 8ck total widths for 2D 46
  ESMF_TYPEKIND_R8 w/ comPASS  ArrayDestroy TeputationalEdge and tst, ESMF_ArrayCreateGeotal widths Test, ESMF_tUTest.F90, line 855
ArrayCreateGetUTest.F90, line 824
  PASS  Check total bounds for 2D ESMF_TYPE  PASS  Create test AKIND_R8 w/ computatiorray with ESMF_PIN_DE_TnalEdge and total widthO_PET, ESMF_ArrayCreates Test, ESMF_ArrayCreatGetUTest.F90, line 864
eGetUTest.F90, line 838
  PASS  ArrayGe  PASS  Arrat Fortran array pointyDestroy Test, ESMF_Arrer for ESMF_PIN_DE_TO_ayCreateGetUTest.F90PET Test, ESMF_ArrayCre, line 855
ateGetUTest.F90, line 871
  PAS  PASS S  ArrayDestroy Test f Create test Array wior array with ESMF_PIN_th ESMF_PIN_DE_TO_PET, DE_TO_PET, ESMF_ArrayCESMF_ArrayCreateGetUTreateGetUTest.F90, lineest.F90, line 864
 885
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 871
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 885
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTes  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
t.F90, line 895
  PASS  ArrayGet Fortran array pointer for ESMF90, line 895
  PASS  Array  PASS  ArrayGet Fortran array poin  PASS  ArrayGet Fortran array pointer for ESMF_PI_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 907
Get Fortran array pointer for ESMF_PIN_DE_TO_SSI ter for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTesN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 907
Test, ESMF_ArrayCreateGetUTest.F90, line 907
t.F90, line 907
  PASS  Ar  PASS  ArrayGet ssiLocal  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI  PASS  ArrayGet ssiLocalDeCount ESMF_PINrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetU Test, ESMF_ArrayCreateGetUTest.F90, line 925
_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, linrayCreateGetUTest.F90, line 925
Test.F90, line 925
  PASS  ArrayGet localDeToDeMap ESMF_e 925
PIN_DE_TO_SSI Test, ESMF_ArrayCreateGe  PASS  ArrayGet localDeToDeM  PASS  ArrayGet localDeToDeMap ESMF_PIN_DtUTest.F90, line 944
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreaap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 944
E_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 944
teGetUTest.F90, line 944
  PASS  ArraySync() for ESMF_PI  PASS  ArraySync() for ESMF_PIN_DE_TO_  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_Ar  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.N_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 966
  PASS  LocalArrayGet Fortran aSSI Test, ESMF_ArrayCreateGetUTest.F90, line 966
  PASS  LocrayCreateGetUTest.F90, line 966
  PASS  LocalArrayGet FortrF90, line 966
  PASS  LocalArrayGet Fortran array pointer forray pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 979
alArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSan array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_Arrar last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F9I Test, ESMF_ArrayCreateGetUTest.F90, line 979
yCreateGetUTest.F90, line 979
0, line 979
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1009
  PASS  Tes  PASS  Test data in LocalArrat data in LocalArray for last ssiLocalDe fy for last ssiLocalDe for ESMF_PIN_DE_Tor ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreO_SSI Test, ESMF_ArrayCreateGetUTest.F90, ateGetUTest.F90, line 1009
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIline 1009
N_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1009
  PASS  ArrayCrea  PASS  ArrayCreate from C  PASS  ArrayCreate from Copy (REF), ESMF_PINte from Copy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTeopy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
   PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCst.F90, line 1023
  PASS  ArrayGet Fortran array pointer f  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_S PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, EreateGetUTest.F90, line 1035
  PASS  ArrayGeor ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035
SI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035
SMF_ArrayCreateGetUTest.F90, line 1035
t ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1053
  PASS  ArrayGet ssiLoca  PASS  ArrayGet ssiLocalDeCount ESMF_PIN  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Tes  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTeslDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, lin_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1053
t, ESMF_ArrayCreateGetUTest.F90, line 1053
t.F90, line 1072
e 1053
  PASS  ArrayGet loc  PASS  ArrayGet localDeToDeMap ESMF_PIN_DEalDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy   PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCr_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1Test, ESMF_ArrayCreateGetUTest.F90, line 1072
eateGetUTest.F90, line 1072
072
  PASS  Array  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy   PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy T  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreSync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, liTest, ESMF_ArrayCreateGetUTest.F90, line 1094
  PASS  LocalArrayGet Fortran array pointest, ESMF_ArrayCreateGetUTest.F90, line 1094
  PASS  LocalArateGetUTest.F90, line 1094
  PASS  LocalArrayGet Fortranne 1094
  PASS  LocalArrayGet Fortran array pointer for laser for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1107
rayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arr array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESt ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.ayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1107
MF_ArrayCreateGetUTest.F90, line 1107
F90, line 1107
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1137
  PASS  T  PASS  Test data in LocalArrayest data in LocalArray for last ssiLocalDe  for last ssiLocalDe for ESMF_PIN_DE_TO_SSfor ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMI arrayCpy Test, ESMF_ArrayCreateGetUTest.  PASS  Test data in LocalArray for last sF_ArrayCreateGetUTest.F90, line 1137
F90, line 1137
siLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1137
  PASS  ArrayDestroy Test for  PASS  ArrayDestroy Test for arrayCp  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI, ESMF_Arra arrayCpy with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
y with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
yCreateGetUTest.F90, line 1151
  PASS  ArrayCreate from Copy   PASS  ArrayCreate fro  PASS  ArrayCreate from Copy (REF), ESMF(REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 11m Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_A  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayou_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1166
66
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 2
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1d71280:
            rank = 2, typekind = 6, base_addr = 0x7fd6a433f000
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
( 6, 1) =  0
( 7, 1) =  0
( 8, 1) =  0
( 1, 2) =  0
rrayCreateGetUTest.F90, line 1166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
t Test, ESMF_ArrayCreateGetUTest.F90, line 1166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  Arra( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
( 4,12) =  0
( 5,12) =  0
( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x1d90430:
            rank = 2, typekind = 6, base_addr = 0x7fd6a4340000
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  10
(10, 1) =  10
(11, 1) =  10
(12, 1) =  10
(13, 1) =  10
(14, 1) =  10
(15, 1) =  10
( 9, 2) =  10
(10, 2) =  10
(11, 2) =  10
  skipping to end ...
(13,11) =  10
(14,11) =  10
(15,11) =  10
( 9,12) =  10
(10,12) =  10
(11,12) =  10
(12,12) =  10
(13,12) =  10
(14,12) =  10
(15,12) =  10
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Cop{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ D
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 2
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x2381540:
            rank = 2, typekind = 6, base_addr = 0x7fcd07473000
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  20
( 2,13) =  20
( 3,13) =  20
( 4,13) =  20
( 5,13) =  20
( 6,13) =  20
( 7,13) =  20
( 8,13) =  20
( 1,14) =  20
( 2,14) =  20
  skipping to end ...
( 7,22) =  20
( 8,22) =  20
( 1,23) =  20
( 2,23) =  20
( 3,23) =  20
( 4,23) =  20
( 5,23) =  20
yPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1177
ELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1177
( 6,23) =  20
( 7,23) =  20
( 8,23) =  20
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x2381870:
            rank = 2, typekind = 6, base_addr = 0x7fcd07474000
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  30
(10,13) =  30
(11,13) =  30
(12,13) =  30
(13,13) =  30
(14,13) =  30
(15,13) =  30
( 9,14) =  30
(10,14) =  30
(11,14) =  30
  skipping to end ...
(13,22) =  30
(14,22) =  30
(15,22) =  30
( 9,23) =  30
(10,23) =  30
(11,23) =  30
(12,23) =  30
(13,23) =  30
(14,23) =  30
(15,23) =  30
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASTest.F90, line 1177
  PASS  ArrayG  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI aS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_Arraet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1185
  PASS  ArrayGet localDeToDeMap ESMF_PIN_rrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1185
yCreateGetUTest.F90, line 1177
  .F90, line 1185
  PASS  ArrDE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1204
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SPASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTeSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1204reateGetUTest.F90, line 1185
st.F90, line 1204
  PASS  Test 
  PASS  Test data in LocalArra  PASS  ArrayGet localDeToDeMap ESMF_PIdata in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSy for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, N_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, linI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
ESMF_ArrayCreateGetUTest.F90, line 1236
e 1204
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
  PASS  ArraySync() for ESMF_PI  PASS  ArraySync() for ESMF_PIN_DE_TO_S  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test,  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250
  PASS  ArrayDSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250
 ESMF_ArrayCreateGetUTest.F90, line 1250
  PASS  ArraGetUTest.F90, line 1250
  PASS  ArrayDestroy Test for estroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_ArrayCreateGetUTest.F90, line 1262
  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELyDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_ArraarrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_ArrayCreateGetUTest.F90ayout, ESMF_ArrayCreateGetUTest.F90, line 1262
yCreateGetUTest.F90, line 1262
, line 1262
  PASS  ArrayDestroy Test for ar  PASS  ArrayDestroy Test for array w  PASS  ArrayDestroy Test for array with   PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_Arraray with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
ith ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
yCreateGetUTest.F90, line 1274
  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F  PASS  ArrayCreate Ass90, line 1296
  PASS  ArraymdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_Arr  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCr  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1296
Get Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
ayCreateGetUTest.F90, line 1296
  PASS  ArrayGeeateGetUTest.F90, line 1296
  PASS  ArrayGet Fort  PASS  ArrayGet w/ int Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_Arran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCrea  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
compatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1310
rayCreateGetUTest.F90, line 1303
teGetUTest.F90, line 1303
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1d8f460:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
  PASS  ArrayGet w/ inco  PASS  ArrayGet w/ incompatible Fortran array poindim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetmpatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ES  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCrter, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1310
UTest.F90, line 1317
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1324
MF_ArrayCreateGetUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
eateGetUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x245c960:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
  PASS  ArrayC{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x12ac440:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x23820f0:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdSha( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_Arreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 131pe 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1317
rayCreateGetUTest.F90, line 1317
  PASS  ArrayDestroy Te, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1d8f460:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [2 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
 7
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F9  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line st, ESMF_ArrayCreateGetUTest.F90, line 1324
 PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ArrayCrea0, line 1324
1324
teGetUTest.F90, line 1340
  PASS  ArrayDestroy Test, ESMF_Arra  PASS  ArrayCreate AssmdS  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negayCreateGetUTest.F90, line 1347
hape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge width  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test,tive computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1333
  PASS  ArrayCreate AssmdShape 2Ds Test, ESMF_ArrayCreateGetUTest.F90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no ESMF_ArrayCreateGetUTest.F90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x245c960:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
 ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
  PASS  ArrayGet Fortra
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x12ac440:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrin{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x23820f0:
            rank = 1, typekind = 6, base_addr = 0x762f20
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Assmd(10) =  0
dim 1: [0]: [1 [1 [1, 10] 9] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computn array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1373
t AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test,Shape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ESMF_ationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1340
  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYP ESMF_ArrayCreateGetUTest.F90, line 1340
  PASS  ArrayDeArrayCreateGetUTest.F90, line 1340
  PASS  ArrayDestroy T  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1347
EKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1380
  PASS  ArrayDestroy Test, ESMF_Arrstroy Test, ESMF_ArrayCreateGetUTest.F90, line 1347
est, ESMF_ArrayCreateGetUTest.F90, line 1347
ayCreateGetUTest.F90, line 1387
  PASS  ArrayCre  PASS  ArrayCreate AssmdShapate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGe  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 T  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test,e 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
tUTest.F90, line 1406
  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
  PASS  Arr ESMF_ArrayCreateGetUTest.F90, line 1366
  PASS  ArrayG  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, est, ESMF_ArrayCreateGetUTest.F90, line 1413
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTesESMF_ArrayCreateGetUTest.F90, line 1373
etUTest.F90, line 1420
UTest.F90, line 1373
t.F90, line 1373
  PASS  ArrayCreate AssmdShape 4D ESMF_T  PASS  ArrayGet w/ incompatible Fortran array poin  PASS  ArrayGet w/ incompatible Fortran array pointer  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F9YPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1439
  PASS  ArrayGet Fortrter, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1380
, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1380
0, line 1380
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUan array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1446
  PAS  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 138  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1387
Test.F90, line 1387
S  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1453
7
  PASS  ArrayCreate Assm  PASS  ArrayCreate A  PASS  ArrayCreate AssmdShapdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F9ssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTese 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, 0, line 1406
  PASS  ArrayGet Fortran a  PASS  Create test Array for extra edget.F90, line 1406
  PASS  ArrayGet Fortran array pointer, line 1406
  PASS  ArrayGet Fortran array pointer, 3D ESMFrray pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 14 element test, ESMF_ArrayCreateGetUTest.F90, line 1514
3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413
_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413
13
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1543
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1420
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1420
, line 1420
  PASS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 15  PASS  ArrayCreate AssmdShape 4D ESMF62
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, _TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1439
DistGrid dimCount = 1
deCount = 1
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1d8f460:
            rank = 1, typekind = 6, base_addr = 0x7fd6986f6320
            dim[0] = 4  
  Real, *8, Dim 1, Data values:
( 1) =  6.94458e-310
( 2) =  9.311e-13
( 3) =  -1.07501e+59
( 4) =  6.60776e-317
dim 1: [0]: [1 [1 [1, 4] 4] 4]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayCrea Test, ESMF_ArrayCreateGetUTest.F90, line 1439
ESMF_ArrayCreateGetUTest.F90, line 1439
  PASS  A  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 TestteGetUTest.F90, line 1569
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayrrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGet, ESMF_ArrayCreateGetUTest.F90, line 1446
  PASS  ArrayDestr576
  PASS  Create Array on single DE DisCreateGetUTest.F90, line 1446
  PASS  ArrayDestroy Test, ESMUTest.F90, line 1446
  PASS  ArrayDestroy Test, ESMF_ArrayCoy Test, ESMF_ArrayCreateGetUTest.F90, line 1453
tGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1592
  PASS  ArrayDesF_ArrayCreateGetUTest.F90, line 1453
reateGetUTest.F90, line 1453
troy Test, ESMF_ArrayCreateGetUTest.F90, line 1599
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, line 1627
  PASS  ArrayDestroy Test,   PASS  Create test Array for extra edESMF_ArrayCreateGetUTest.F90, line 1634
    PASS  Create test Array for extra edge el  PASS  Create test Array for extra edge element testge element test, ESMF_ArrayCreateGetUTest.F90, line 1514
Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1644
ement test, ESMF_ArrayCreateGetUTest.F90, line 1514
, ESMF_ArrayCreateGetUTest.F90, line 1514
  PASS  Arra  PASSyDestroy Test, ESMF_ArrayCreateGetUTest.F90,  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1543
 line 1543
F90, line 1543
  PASS  Create Array on sin  PASS  Create Array   PASS  Create Array on single DE Digle DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1562
on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 156stGrid, ESMF_ArrayCreateGetUTest.F90, line 1562
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS2
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS    ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGe--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on single DE DistGrid, ESMF_ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUtUTest.F90, line 1569
  PASS  ArrayDestroy ArrayCreateGetUTest.F90, line 1569
  PASS Test.F90, line 1569
  PASS  ArrayDestroy TTest, ESMF_ArrayCreateGetUTest.F90, line 1576
 ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1576
est, ESMF_ArrayCreateGetUTest.F90, line 1576
  PASS  Create Array on single DE D  PASS  Create   PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.F9Array on single DE DistGrid with Fortran allocation, ESMF_istGrid with Fortran allocation, ESMF_ArrayCreateGetUTest.0, line 1592
  PASS  ArrayDestroy Test, ArrayCreateGetUTest.F90, line 1592
  PASS F90, line 1592
  PASS  ArrayDestroy Test, ESMF_ESMF_ArrayCreateGetUTest.F90, line 1599
 ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1599
ArrayCreateGetUTest.F90, line 1599
  PASS  Create Array on 4 DE DistGr  PASS  Create Array   PASS  Create Array on 4 DE DistGrid with oid with only DE 0 elements, with Fortran allocation, ESMF_ArrayCron 4 DE DistGrid with only DE 0 elements, with Fortran allocationly DE 0 elements, with Fortran allocation, ESMF_ArrayCreateGeteateGetUTest.F90, line 1627
  PASS  ArrayDestroy Test,n, ESMF_ArrayCreateGetUTest.F90, line 1627
  PASS  UTest.F90, line 1627
  PASS  ArrayDestroy Test, ESMF ESMF_ArrayCreateGetUTest.F90, line 1634
ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 163_ArrayCreateGetUTest.F90, line 1634
  E  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 164
  Ending Test, file ESMF_ArrayCreatending Test, file ESMF_ArrayCreateGetUTest.F90, line 164444
GetUTest.F90, line 1644

  PET 0  Test Elapsed Time   91.2289999999999992  msec.
  PET 2  Test Elapsed Time   54.5189999999999984  msec.
  PET 1  Test Elapsed Time   54.5849999999999795  msec.
  PET 3  Test Elapsed Time   54.5380000000000038  msec.
[mpiexec@i038.cgd.ucar.edu] HYDT_bscd_pbs_wait_for_completion (tools/bootstrap/external/pbs_wait.c:67): tm_poll(obit_event) failed with TM error 17002
[mpiexec@i038.cgd.ucar.edu] HYDT_bsci_wait_for_completion (tools/bootstrap/src/bsci_wait.c:23): launcher returned error waiting for completion
[mpiexec@i038.cgd.ucar.edu] HYD_pmci_wait_for_completion (pm/pmiserv/pmiserv_pmci.c:218): launcher returned error waiting for completion
[mpiexec@i038.cgd.ucar.edu] main (ui/mpich/mpiexec.c:340): process manager error waiting for completion
