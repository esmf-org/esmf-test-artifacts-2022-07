build time -- 2022-06-16 16:39:16.461558
  Beginning Test, file ESMF_ArrayCreateGetUTest  Beginning Test, file ESMF_ArrayCreateG  Beginning Test, file ESMF_ArrayCreateGetUTest.F9  Beginning Test, file ESMF_ArrayCreateGetUTest.F90, line 97
.F90, line 97
  NUMBER_OF_PROCESSORS 4
  PASS  Testing Array IsCetUTest.F90, line 97
  NUMBER_O0, line 97
  NUMBER_OF_PR  NUMBER_OF_PROCESSORS 4
reated for uncreated object, ESMF_ArrayCreateGetUTest.F9F_PROCESSORS 4
OCESSORS 4
0, line 118
  PASS  Testing Array IsCreated   PASS  Testing Array for uncreated object, ESMF_ArrayCreateGetUTest.F90, line 125
  PASS  Testing Array IsCreated for uncre  PASS  Testing Array IsCreated for uncreated oIsCreated for uncreated object, ESMF_ArrayCreateGeated object, ESMF_ArrayCreateGebject, ESMF_ArrayCreateGetUTesttUTest.F90, line 118
tUTest.F90, line 118
.F90, line 118
  P  PASS  Testing Array IsCreated  PASS  Testing Array IsCreASS  Testing Array IsCreated f for uncreated object, ESMF_Arraated for uncreated object, ESMor uncreated object, ESMF_ArrayCreateGetUTest.F90, line 125
F_ArrayCreateGetUTest.F90, linyCreateGetUTest.F90, line 125
e 125
  PASS  Create test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 143
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 150
  PASS  Testing Array IsCreated for created object, ESMF_ArrayCreateGetUTest.F90, line 157
  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetUTest.F90, line 164
  PASS  Testing Array IsCreated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 17  PASS  Create test Array1
  PASS  Testing Array IsCre  PASS  Create test Array f  PASS  Create test Array for I for IsCreated, ESMF_ArrayCreateGetUTest.F90, linated for destroyed object, ESMF_ArrayCreateGetUTest.F90, line 178
or IsCreated, ESMF_ArrayCreateGetUTest.F90, line sCreated, ESMF_ArrayCreateGetUTest.F90, line 14e 143
  PASS  Testing Array IsC  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 186
143
  PASS  Testing Array3
  PASS  Testing Array Isreated for created object, ESMF_ArrayCreateGetUTe  PASS  Array equality before assignment Test, ESMF_ArrayCreateGetUTe IsCreated for created object, ESMF_ArrayCrCreated for created object, ESMF_ArrayCreast.F90, line 150
  PASS  Tesst.F90, line 193
  PASS  Array assignment and equality Test, ESMF_ArrayCreaeateGetUTest.F90, line 150
teGetUTest.F90, line 150
 ting Array IsCreated for created object, ESMF_teGetUTest.F90, line 202
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGet  PASS  Testing Array IsCreated for created PASS  Testing Array IsCreated for created objArrayCreateGetUTest.F90, line 157
UTest.F90, line 209
  PASS  Array equality after destroy Test, ESMF_ArrayCreat object, ESMF_ArrayCreateGetUTest.F90, line ect, ESMF_ArrayCreateGetUTest.F90, line 157eGetUTest.F90, line 217
  PASS  Array non-equality 157

  PASS  Destroy test Array for IsCreated, ESMF_ArrayCreateGetafter destroy Test, ESMF_ArrayCreateGetUTest.F90, line 225
  PASS  Double   PASS  Destroy test Array for IsCrea  PASS  Destroy test Array for IsCreateUTest.F90, line 164
  PASS ArrayDestroy through alias Test, ESMF_ArrayCreateGetUTest.F90, line 232
ted, ESMF_ArrayCreateGetUTest.F90, line 16d, ESMF_ArrayCreateGetUTest.F90, line 164
 Testing Array IsCreated for destroyed object,4
  PASS  Testin  PASS  Testing Arra ESMF_ArrayCreateGetUTest.F90, line 17  PASS  ArrayCreate Allocate 2D g Array IsCreated for destroyed object, ESMF_y IsCreated for destroyed object, ESMF_ArrayCr1
  PASS  Testing Array IsCreESMF_TYPEKIND_R8 rank inconsistency Test, ESMF_ArrayCreateGetUTest.F90, line 241
ArrayCreateGetUTest.F90, line 171
eateGetUTest.F90, line 171
ated for destroyed object, ESMF_ArrayCreateGetUTe  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateG  PASS  Testing Array IsCreated for dest  PASS  Testing Array IsCreated for destroyst.F90, line 178
etUTest.F90, line 249
  PASS  ArraySet Testroyed object, ESMF_ArrayCreateGetUTest.F90, led object, ESMF_ArrayCreateGetUTest.F90, lin, ESMF_ArrayCreateGetUTest.F90, line 256
  PASS  Arrayine 178
e 178
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArraDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 263
  PASS  ArrayCreate All  PASS  ArrayCreate AllocateyCreateGetUTest.F90, line 186
  PASS  ArrayCreate Allocate 2ocate 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCr 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateG  PASS  Array equality before assignment D ESMF_TYPEKIND_R8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 277
eateGetUTest.F90, line 186
etUTest.F90, line 186
Test, ESMF_ArrayCreateGetUTest.F90, line 193
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_Arra  PASS  Array equality before assignme  PASS  Array equality before assignmentyCreateGetUTest.F90, line 285
--- ESMCI::Array::print start ---
nt Test, ESMF_ArrayCreateGetUTes Test, ESMF_ArrayCreateGetUTest.  PASS  Array assignment and equality Test, ESMF_ArrayCreateGetU Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
t.F90, line 193
  PASS F90, line 193
  PASS  ATest.F90, line 202
  PASS{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x11eb040:
            rank = 2, typekind = 6, base_addr = 0x7fae4c4d4740
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
( 2, 1) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
( 6, 1) =  0
( 7, 1) =  0
( 8, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
( 4,12) =  0
( 5,12) =  0
 Array assignment and equality Test, ESMF_Arrayrray assignment and equality Test, ESMF_ArrayCr  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, ( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 292
CreateGetUTest.F90, line 202
eateGetUTest.F90, line 202
line 209
  PASS  Array equa Array name: MyArray   PASS  ArrayDestroy Test, ESMF_ArrayCrea  PASS  ArrayDestroy Test, ESMF_ArrayCreality after destroy Test, ESMF_ArrayCreateGetUTewith ArraySpec                                                          
  PASS  ArrayGeteGetUTest.F90, line 209
teGetUTest.F90, line 209
  st.F90, line 217
  PASS  Arrt arrayspec and name, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 300
  PASS  Array equality after destroy TestPASS  Array equality after destroy Test, ESMF_ay non-equality after destroy Test, ESMF_Arr  PASS  Verify ArraySpec returned from Array, ESMF_ArrayCreateGetUTest.F90, line , ESMF_ArrayCreateGetUTest.F90, line 217
ArrayCreateGetUTest.F90, line 217
ayCreateGetUTest.F90, line 225
306
  PASS  Verify name returned from Array, ESMF_ArrayCreateG  PASS  Array non-equality a  PASS  Array non-equality after   PASS  Double ArrayDestroy through alias TeetUTest.F90, line 312
  PASS  ArrayGet Fortran arfter destroy Test, ESMF_ArrayCreateGetUTestdestroy Test, ESMF_ArrayCreateGetUTest.F90,st, ESMF_ArrayCreateGetUTest.F90, line 232
ray pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 319
.F90, line 225
  PASS  Double  line 225
  PASS  Double ArraArrayDestroy through aliyDestroy through alias as Test, ESMF_ArrayCreTest, ESMF_ArrayCreateGeateGetUTest.F90, line 23tUTest.F90, line 232
2
  PASS  Getting Attribute count from an Array, ESMF_ArrayCreateG  PASS  ArrayCreate AllocaetUTest.F90, line 326
  PAte 2D ESMF_TYPEKIND_R8 rSS  Verify Attribute count from an Array, ESMF_Aank inconsistency Test, ESMrrayCreateGetUTest.F90, line 332
F_ArrayCreateGetUTest.F9  PASS  ArrayCreat0, line 241
e from Copy, uninitialized Array Test, ESMF_ArrayCre  PASS  ArrayCreate Allocate 2D   PASS  ArrayCreate Allocate 2D ESMF_TateGetUTest.F90, line 339
ESMF_TYPEKIND_R8 rank inconsisteYPEKIND_R8 rank inconsistency Te  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Te  PASS  ArrayCreate from Copy (ALLOC), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreancy Test, ESMF_ArrayCreateGetUTest.F90, list, ESMF_ArrayCreateGetUTest.F90, line 241
st, ESMF_ArrayCreateGetUTest.F90, line 249
teGetUTest.F90, line 347
 Array name: Array007   ne 241
                                                    PASS  ArrayCrea                   
  PASS  ArrayGet arrayspec fte Allocate 2D ESMF_TYP  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_  PASS  ArraySet Test, ESMF_ArrayCreateGetUTest.F90, line 256rom Array Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 355
  PASS EKIND_R8 Test, ESMF_ArrayCreateGetUTest.R8 Test, ESMF_ArrayCreateGetUTest.F90, line 2
  PASS  ArrayDestroy Test, ES Verify ArraySpec returned from Array (ALLOC) Copy, ESMF_ArrayCreateGetUTest.F90, line 361
F90, line 249
49
MF_ArrayCreateGetUTest.F90, line 263
  PASS  ArrayGet Fortran array pointer, from Array Copy (ALLOC) Test, ESMF_Arra  PASS  ArraySet Test, ESMF_ArrayCr  PASS  ArraySet Test, ESMF_ArrayCreateGetUTesyCreateGetUTest.F90, line 368
eateGetUTest.F90, line 256
t.F90, line 256
  PASS  Arr  PASS  ArrayDestroy ayDestroy Test, ESMF_ArTest, ESMF_ArrayCreateGe  PASS  ArrayCreate Allocate 2D ESMF_TYPEKINDrayCreateGetUTest.F90, line 263
tUTest.F90, line 263
_R8 Test w/ ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 277
  PASS    PAS  PASS  ArrayCrArrayCreate Allocate 2D ESMF_TYPEKIND_S  ArrayCreate Allocate 2D ESMF_Teate Allocate 2D ESMF_TYPEKIND_R8 TR8 Test with ArraySpec, ESMF_ArrayCreaYPEKIND_R8 Test w/ ArraySpec, ESMFest w/ ArraySpec, ESMF_ArrayCreatteGetUTest.F90, line 285
_ArrayCreateGetUTest.F90, line 2eGetUTest.F90, line 277
77
--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = Ready
 Proxy        = no  PASS  Ar  PASS  ArrayCreate 
 Root Info (Attributes):
rayCreate Allocate 2D ESMF_TYPEKIAllocate 2D ESMF_TYPEKIND_R8 Test{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x19dd8d0:
            rank = 2, typekind = 6, base_addr = 0x7fb99b54f6b0
            ND_R8 Test with ArraySpec, ESMF_ with ArraySpec, ESMF_ArrayCreatedim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  0
(10,13) =  0
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  0
( 9,14) =  0
(10,14) =  0
(11,14) =  0
  skipping to end ...
ArrayCreateGetUTest.F90, line 285GetUTest.F90, line 285
(13,22) =  0
(14,22) =  0
(15,22) =  0
( 9,23) =  0
(10,23) =  0
(11,23) =  0
(12,23) =  0
(13,23) =  0
(14,23) =  0
(15,23) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  A  PASS  Verif
--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec--- ESMCI::Array::print start ---
 Base name    = MyArray with ArraySpec
 Status: Base = Ready,  object = ReadyrrayPrint 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCrey Array vs Array Copy (ALLOC) no data copy, ESMF_ArrayCreateGetUTest.F90, line 384

 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):

 Proxy        = no
 Root Info (Attributes):
{}ateGetUTest.F90, line 292
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x23088d0:
Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x27738d0:
            rank = 2, typekind = 6, base_addr = 0x7fe6310d2700
            dim[0] = 8  dim[1] = 11  
            rank = 2, typekind = 6, base_addr = 0x7f8a3dc1f6e0
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  0
(10, 1) =  0
  Real, *8, Dim 2, Data values:
( 1,13) =  0
( 2,13) =  0
( 3,13) =  0
( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
(11, 1) =  0
(12, 1) =  0
(13, 1) =  0
(14, 1) =  0
(15, 1) =  0
( 9, 2) =  0
(10, 2) =  0
(11, 2) =  0
  skipping to end ...
(13,11) =  0
(14,11) =  0
(15,11) =  0
( 9,12) =  0
( 8,13) =  0
( 1,14) =  0
( 2,14) =  0
  skipping to end ...
( 7,22) =  0
( 8,22) =  0
( 1,23) =  0
( 2,23) =  0
( 3,23) =  0
( 4,23) =  0
( 5,23) =  0
( 6,23) =  0
( 7,23) =  0
( 8,23) =  0
 Array name: MyArray with ArraySpec         (10,12) =  0
(11,12) =  0
(12,12) =  0
(13,12) =  0
(14,12) =  0
(15,12) =  0
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  Arraydim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ES                                     Print 2D ESMF_TYPEKIND_R8 Test, ESMF_TYPEKIND_R8 Test, ESMF_ArrayC            
  PASS  ArrayGet aMF_ArrayCreateGetUTest.F90, linereateGetUTest.F90, line 292
rrayspec and name, 2D ESMF_TYPEKIND 292
_R8 Test, ESMF_ArrayCreateGetUTest.F90, Ar Array name: M line 300
  PAray name: MyArray with ArraySpecyArray with ArraySpec            SS  Verify ArraySpec returned from                                                                   Array, ESMF_ArrayCreateGetUTest.F90                         
  P             
  PASS  ArrayGet , line 306
  PAASS  ArrayGet arrayspec and name, arrayspec and name, 2D ESMF_TYPEKISS  Verify name returned from Array2D ESMF_TYPEKIND_R8 Test, ESMF_ArrND_R8 Test, ESMF_ArrayCreateGetUT, ESMF_ArrayCreateGetUTest.F90, lineayCreateGetUTest.F90, line 300
est.F90, line 300
 312
  PASS  Verif  PASS  Verify ArraySpe  PASS  ArrayGet Fortran array  PASS  Verify Array vs Array Copy (ALLOC) separate memory allocation, y ArraySpec returned from Array, ESMF_Arrac returned from Array, ESMF_ArrayCreateGet pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayESMF_ArrayCreateGetUTest.F90, line 402
  PASS  ArrayDestroy Test, ESMyCreateGetUTest.F90, line 306
UTest.F90, line 306
CreateGetUTest.F90, line 319
F_ArrayCreateGetUTest.F90, line 409
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x11ebcf0:
            rank = 2, typekind = 6, base_addr = 0x7fae4c4d4a50
            dim[0] = 8    PASS  Verify name returned from   PASS  Verify name returned from Array, ESdim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  100
( 2, 1) =  100
( 3, 1) =  100
( 4, 1) =  100
( 5, 1) =  100
( 6, 1) =  100
( 7, 1) =  100
( 8, 1) =  100
( 1, 2) =  100
( 2, 2) =  100
  skipping to end ...
( 7,11) =  100
( 8,11) =  100
( 1,12) =  100
( 2,12) =  100
( 3,12) =  100
( 4,12) =  100
( 5,12) =  100
( 6,12) =  100
( 7,12) =  100
( 8,12) =  100
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrintArray, ESMF_ArrayCreateGetUTest.F90MF_ArrayCreateGetUTest.F90, line 312 from Copy (ALLOC) after original destroy, 2D ESMF_TYPEKIND_R8 Test, ESMF_A, line 312

rrayCreateGetUTest.F90, line 416
  PASS  ArrayDest  PASS  ArrayGet Fortran   PASS  ArrayGet Fortran arraroy of Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 423
array pointer, 2D ESMF_TYPEKIND_Ry pointer, 2D ESMF_TYPEKIND_R8 Test  PASS  Getting Attribute count from an  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with Arr8 Test, ESMF_ArrayCreateGetUTest.F90, line, ESMF_ArrayCreateGetUTest.F90, line 319
 Array, ESMF_ArrayCreateGetUTest.F90, line 32aySpec, ESMF_ArrayCreateGetUTest.F90, line 431
  PASS  ArrayGet Fortran 319
6
  PASS  Verify array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F9 Attribute count from an A0, line 438
  PASS  Arrray, ESMF_ArrayCreateGetUrayCreate from Copy (VALUE), 2D ESMF_TYPEKIND_R8 TestTest.F90, line 332
, ESMF_ArrayCreateGetUTest.F90, line 446
 Array name:  PASS  Getting Array009                                            PASS  Getting Attribute Attribute count from an Array, ESMF  PASS  ArrayCreate from Copy, uninitialized Array Test, ES                              
  PASS  ArrayGet arrayspec from Array Copy (VALUE) Test, ES count from an Array, ESMF_ArrayCreateGetUTe_ArrayCreateGetUTest.F90, line 326
MF_ArrayCreateGetUTest.F90, line 339
MF_ArrayCreateGetUTest.F90, line 454
  PASS  Verify ArraySpec returned st.F90, line 326
  PASS    PASS  Verify Attribute count from an from Array (VALUE) Copy, ESMF_ArrayCreateGetUTest.F90, line 460
Verify Attribute count from an ArArray, ESMF_ArrayCreateGetUTest.F9  PASS  ArrayCreate from Copy (ALLOC), 2D ESMF  PASS  ArrayGet Fortran array pointer, from Array Copy (VALUE) Test, ESMF_ArrayCrray, ESMF_ArrayCreateGetUTest.F90, line 3320, line 332
_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F9eateGetUTest.F90, line 467

  PASS  ArrayCreate from Copy, unini0, line 347
  PASS  ArrayCreate from Copy, tialized Array Test, ESMF_ArrayCreateGe Array name: Array007           uninitialized Array Test, ESMF_ArrtUTest.F90, line 339
                                    ayCreateGetUTest.F90, line 339
                           PASS  ArrayCreate fr
  PASS  ArrayGet arr  PASom Copy (ALLOC), 2D ESMF_TYPEKIND_R8ayspec from Array Copy (ALLOC) TestS  ArrayCreate from Copy (ALLOC), Test, ESMF_ArrayCreateGetUTest.F90,, ESMF_ArrayCreateGetUTest.F90, line 3 2D ESMF_TYPEKIND_R8 Test, ESMF_Ar line 347
55
  PASS  VerifrayCreateGetUTest.F90, line 347
 Array name: Array00y ArraySpec returned from Array (AL7                        LOC) Copy, ESMF_ArrayCreate Array name: Array00                                     GetUTest.F90, line 361
7                                           
  PASS  ArrayGet ar  PASS  ArrayGet Fortran arra                                rayspec from Array Copy (ALLOC) Tesy pointer, from Array Copy (ALLOC)         
  PASS  ArrayGet arrt, ESMF_ArrayCreateGetUTest.F90, lineTest, ESMF_ArrayCreateGetUTest.F90, ayspec from Array Copy (ALLOC) Te 355
  PASS  Veriline 368
  PASS  Verify Array vs Array Copy (VALUE) data copy, ESst, ESMF_ArrayCreateGetUTest.F90, line 355
fy ArraySpec returned from Array (ALLOC) Copy, MF_ArrayCreateGetUTest.F90, line 483
  PASS  VerifESMF_ArrayCreateGetUTest.F90, line y ArraySpec returned fr361
om Array (ALLOC) Copy,   PASS  ArrayGet FortranESMF_ArrayCreateGetUTe array pointer, from Arrayst.F90, line 361
 Copy (ALLOC) Test, ESMF_  PASS  ArrArrayCreateGetUTest.F90, ayGet Fortran array pointeline 368
r, from Array Copy (ALLOC) Test, ESMF_ArrayCreateGetUTest.F90, line 368
  PASS  Verify Array vs Array Copy (VALUE) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 501
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 508
  PASS  ArrayDestroy of Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 515
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 523
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 530
  PASS  ArrayCreate from Copy (REF), 2D ESMF_T  PASS  VerifyYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, l Array vs Array Copy (Aine 538
 ArrayLLOC) no data copy, ES name: Array011                                   MF_ArrayCreateGetUTest.F                                     
  PASS  Ar90, line 384
rayGet arrayspec from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 546
  PASS  Verify ArraySpec returned from Array Copy (REF), ESMF_ArrayCreateGetUTest.F90, line 552
  PASS  ArrayGet Fortran array pointer, from Array Copy (REF) Test, ESMF_ArrayCreateGetUTest.F90, line 559
  PASS  Verify Array vs Array Copy (ALLOC) no data copy, ESMF_ArrayCreateGetUTest.F90, line 384
  PASS  Verify Array vs Array Copy (ALLOC) no data copy, ESMF_ArrayCreateGetUTest.F90, line 384
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (ALLOC) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 402
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 409
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x19de740:
            rank = 2, typekind = 6, base_addr = 0x7fb99b54f930
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  103
(10,13) =  103
(11,13) =  103
(12,13) =  103
(13,13) =  103
(14,13) =  103
(15,13) =  103
( 9,14) =  103
(10,14) =  103
(11,14) =  103
  skipping to end ...
(13,22) =  103
(14,22) =  103
(15,22) =  103
( 9,23) =  103
(10,23) =  103
(11,23) =  103
(12,23) =  103
(13,23) =  103
(14,23) =  103
(15,23) =  103
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Cop  PASS  Veriy (ALLOC) after original fy Array vs Array Copy (REF) shared allocation  PASS  Verify Array vs Adestroy, 2D ESMF_TYPEKIND_R8 Test, E Test2, ESMF_ArrayCreateGetUTest.F90, line 593
  PArray Copy (ALLOC) separate memory allocatSMF_ArrayCreateGetUTest.F90, line 416
SS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 600
    PASS  Verify Array vs Aion, ESMF_ArrayCreateGetUTest.F90, line 402
PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line rray Copy (ALLOC) separate memory  PASS  ArrayDestroy of Copy (ALLOC) Test, ESMF_ArrayC607
 allocation, ESMF_ArrayCreateGet  PASS  ArrayDestroy Test, ESMF_ArrayCreatereateGetUTest.F90, line 423
UTest.F90, line 402
GetUTest.F90, line 409
  PASS  ArrayCreate from Ptr  PASS  ArrayDestroy --- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8  with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 616
Test, ESMF_ArrayCreateGetUTest.F90, line 40deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x2774740:
            rank = 2, typekind = 6, base_addr = 0x7fe6310d29d0
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  102
( 2,13) =  102
( 3,13) =  102
( 4,13) =  102
( 5,13) =  102
( 6,13) =  102
( 7,13) =  102
( 8,13) =  102
( 1,14) =  102
( 2,14) =  102
  skipping to end ...
( 7,22) =  102
( 8,22) =  102
( 1,23) =  102
Test with ArraySpec, ESMF_ArrayCreateGetUTest--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x11eb040:
            rank = 3, typekind = 5, base_addr = 0x7fae4c4d4df0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
9
--- ESMCI::Array::print start ---
 Base name    = Array007
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
( 2,23) =  102
( 3,23) =  102
( 4,23) =  102
( 5,23) =  102
( 6,23) =  102
( 7,23) =  102
( 8,23) =  102
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint fro.F90, line 431
  PASS  ArrayGe( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTestlocalDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x2309740:
            rank = 2, typekind = 6, base_addr = 0x7f8a3dc1f990
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  101
(10, 1) =  101
(11, 1) =  101
(12, 1) =  101
(13, 1) =  101
(14, 1) =  101
(15, 1) =  101
( 9, 2) =  101
(10, 2) =  101
(11, 2) =  101
  skipping to end ...
(13,11) =  101
(14,11) =  101
(15,11) =  101
( 9,12) =  101
m Copy (ALLOC) after original destroy, 2D ESt Fortran array pointer, 2D ESMF_TYPEKIND_R8 Te.F90, line 623
  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest(10,12) =  101
(11,12) =  101
(12,12) =  101
(13,12) =  101
(14,12) =  101
(15,12) =  101
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint frMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTesst, ESMF_ArrayCreateGetUTest.F90, line 438
.F90, line 630
  PASS  Deallocate returned pointer Test, ESMF_Arrayom Copy (ALLOC) after original destroy, 2D t.F90, line 416
  PASCreateGetUTest.F90, line 637
  PASS  ArrayDesESMF_TYPEKIND_R8 Test, ESMF_ArrayCrS  ArrayDestroy of Copy (ALLOC) Tes  PASS  ArrayCreate from Copy (VALUE), 2D ESMF_TYPEKIND_R8 Testroy Test, ESMF_ArrayCreateGetUTest.F90, line 644
eateGetUTest.F90, line 416
t, ESMF_ArrayCreateGetUTest.F90, line 423
t, ESMF_ArrayCreateGetUTest.F90, line 446
  PASS  ArrayCreate with 3D farray on 2D DistGrid Test, ESMF_ArrayCreate  PASS  ArrayDestroy of Copy (ALLOC) TeGetUTest.F90, line 653
st, ESMF_ArrayCreateGe  PASS  ArrayCreate Allo  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 660tUTest.F90, line 423
cate 2D ESMF_TYPEKIND_R8 Test with Array name: Array009                                            
  PASS  ArrayCreate with 3D farr  PASS  ArrayCreat ArraySpec, ESMF_ArrayCreateGetUTest.F90, li                            
  PASS  ArrayGay on 2D DistGrid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 671
e Allocate 2D ESMF_TYPEKIND_R8 Test with Arrane 431
  PASS  ArrayGetet arrayspec from Array Copy (VALUE) Test, ESMF  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 678
ySpec, ESMF_ArrayCreateGetUTest.F90, line  Fortran array pointer, 2D ESMF_TYPEKIND_R_ArrayCreateGetUTest.F90, line 454
  PASS  ArrayCreate with 3D farrayPtr on 2D DistGr431
  PASS  ArrayGet Fo8 Test, ESMF_ArrayCreateGetUTest.F90, line 4  PASS  Verify ArraySpec returned froid w/ ESMF_DATACOPY_VALUE Test, ESMF_ArrayCreateGetUTest.F90, line 689
rtran array pointer, 2D ESMF_TYPEKIND_R8 T38
  PASS  ArrayCm Array (VALUE) Copy, ESMF_ArrayCreateGetUTest  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 696
est, ESMF_ArrayCreateGetUTest.F90, line 43reate from Copy (VALUE), 2D ESMF_TYPEKIND_R.F90, line 460
  PASS  Arra8
  PASS  8 Test, ESMF_ArrayCreateGetUTest.F9yGet Fortran array pointer, from ArrArrayCreate from Copy (VALUE), 2D 0, line 446
ay Copy (VALUE) Test, ESMF_ArrayCre  PASS  ArESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUT Array name: Array009      ateGetUTest.F90, line 467
rayCreate with 3D farray on 2D DistGrid w/ distgridToArrayMap Test, ESMF_ArrayCreateGetUest.F90, line 446
                                          Test.F90, line 708
  PASS  ArrayDestroy Test,  Array name: Array009                        
  PASSESMF_ArrayCreateGetUTest.F90, line 715
                                   ArrayGet arrayspec from Array   PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ negative com                                   Copy (VALUE) Test, ESMF_ArrayCreateputational widths Test, ESMF_ArrayCreateGetUTest.F90, line 725
    
  PASS  ArrayGet arrayspGetUTest.F90, line 454
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x11eb040:
            rank = 2, typekind = 6, base_addr = 0x7fae4c4d4740
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  6.93603e-310
( 2, 1) =  300
( 3, 1) =  300
( 4, 1) =  300
( 5, 1) =  300
( 6, 1) =  300
ec from Array Copy (VALUE) Test,( 7, 1) =  300
( 8, 1) =  300
( 1, 2) =  300
( 2, 2) =  300
  skipping to end ...
( 7,11) =  300
( 8,11) =  300
( 1,12) =  300
( 2,12) =  300
( 3,12) =  300
( 4,12) =  300
( 5,12) =  300
( 6,12) =  300
( 7,12) =  300
( 8,12) =  -3.01583e+58
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
  PASS  ESMF_ArrayCreateGetUTes  PASS  Verify ArraySpec returned from Array  ArrayPrint 2D ESMF_TYPEKIND_R8 w/ computational widths Test, ESMF_At.F90, line 454
(VALUE) Copy, ESMF_ArrayCreateGetUrrayCreateGetUTest.F90, line 732
  PASS  ArrayDest  PASS  Verify ArraySpec returned Test.F90, line 460
roy Test, ESMF_ArrayCreateGetUTest.F90, line 739
from Array (VALUE) Copy, ESMF_Ar  PASS  ArrayGet Fortran arra  PASS  ArrayCreate Allocate 2DrayCreateGetUTest.F90, line 460
y pointer, from Array Copy (VALU ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCre  PASS  ArrayGetE) Test, ESMF_ArrayCreateGetUTesateGetUTest.F90, line 748
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~ Fortran array pointer, from Arrt.F90, line 467

DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x11ef340:
            rank = 2, typekind = 6, base_addr = 0x7fae4c4d4740
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  6.93603e-310
( 2, 1) =  300
( 3, 1) =  300
( 4, 1) =  300
( 5, 1) =  300
( 6, 1) =  300
( 7, 1) =  300
( 8, 1) =  300
( 1, 2) =  300
( 2, 2) =  300
  skipping to end ...
( 7,11) =  300
( 8,11) =  300
( 1,12) =  300
( 2,12) =  300
( 3,12) =  300
( 4,12) =  300
( 5,12) =  300
( 6,12) =  300
( 7,12) =  300
( 8,12) =  -3.01583e+58
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
ay Copy (VALUE) Test, ESMF_Array  PASS  ArrayPrint 2D ESMF_TYPEKIND_R8 wCreateGetUTest.F90, lin/ computationalEdge widths Test, ESMF_ArrayCree 467
ateGetUTest.F90, line 755
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 768
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 778
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 787
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 797
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
  PASS  Verify {}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x11eb040:
            rank = 2, typekind = 6, base_addr = 0x7fae4c4d4df0
            dim[0] = 12  dim[1] = 18  
  Real, *8, Dim 2, Data values:
( 0,-1) =  2.74283e-317
( 1,-1) =  3.53751e-321
( 2,-1) =  0
( 3,-1) =  0
( 4,-1) =  0
( 5,-1) =  0
( 6,-1) =  0
( 7,-1) =  0
( 8,-1) =  0
( 9,-1) =  0
  skipping to end ...
( 2,16) =  0
Array vs Array Copy (VALU( 3,16) =  0
( 4,16) =  0
( 5,16) =  0
( 6,16) =  0
( 7,16) =  0
( 8,16) =  0
( 9,16) =  0
(10,16) =  0
(11,16) =  0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
  PASS  ArrayPrintE) data copy, ESMF_ArrayCr 2D ESMF_TYPEKIND_R8 w/ computationalEdge and toeateGetUTest.F90, line 4tal widths Test, ESMF_ArrayCreateGetUTest.F90, line 883
04
  PASS  ArrayGet 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 816
  PASS  Check total widths for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 824
  PASS  Check total bounds for 2D ESMF_TYPEKIND_R8 w/ computationalEdge and total widths Test, ESMF_ArrayCreateGetUTest.F90, line 834
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 855
  PASS  Create test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 864
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 871
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESM  PASS  Verify F_ArrayCreateGetUTest.F90, line 885
Array vs Array Copy (  PAVALUE) data copy, ESMF_ArSS  Verify Array vs ArrayrayCreateGetUTest.F90, li Copy (VALUE) data copy,ne 483
 ESMF_ArrayCreateGetUTest.F90, line 483
  PASS  Verify Array vs Array Copy (VALUE) separate memory allocation, ESMF_ArrayCreateGetUTest.F90, line 501
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 508
  PASS  ArrayDestroy of Copy (VALUE) Test, ESMF_ArrayCreateGetUTest.F90, line 515
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test with ArraySpec, ESMF_ArrayCreateGetUTest.F90, line 523
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 530
  PASS  ArrayCreate from Copy (REF), 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 538
 Array   PASS  name: Array011                PASS  Verify Array vsVerify Array vs Array Copy (VALUE) s                                       Array Copy (VALUE) separate memoryeparate memory allocation, ESMF_Arr                    
  PASS  Arr allocation, ESMF_ArrayCreateGetUTayCreateGetUTest.F90, line 501
ayGet arrayspec from Array Copy (REFest.F90, line 501
  PASS  ArrayDe) Test, ESMF_ArrayCreateGetUTest.F90,  PASS  ArrayDestroy Test, stroy Test, ESMF_ArrayCreateGetUTes line 546
  PASS  ESMF_ArrayCreateGetUTest.F90, linet.F90, line 508
  Verify ArraySpec returned from Array  508
  PASS  ArraPASS  ArrayDestroy of Copy (VALUE)Copy (REF), ESMF_ArrayCreateGetUTest.FyDestroy of Copy (VALUE) Test, ESM Test, ESMF_ArrayCreateGetUTest.F9090, line 552
  PASF_ArrayCreateGetUTest.F90, line 51, line 515
S  ArrayGet Fortran array pointer, fr5
  PASS  ArrayCreate Allocom Array Copy (REF) Test, ESMF_Arra  PASS  ArrayCreate Allocate 2D ate 2D ESMF_TYPEKIND_R8 Test with yCreateGetUTest.F90, line 559
ESMF_TYPEKIND_R8 Test with ArraySpArraySpec, ESMF_ArrayCreateGetUTeec, ESMF_ArrayCreateGest.F90, line 523
tUTest.F90, line 523
  PASS  Array  PASS  ArrayGGet Fortran array pointeet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Ter, 2D ESMF_TYPEKIND_R8 Tst, ESMF_ArrayCreateGetest, ESMF_ArrayCreateGUTest.F90, line 530
etUTest.F90, line 530
  PASS  PASS   ArrayCreate from Copy ArrayCreate from Copy (REF), 2D ESMF_TYPEKIND_ (REF), 2D ESMF_TYPEKINDR8 Test, ESMF_ArrayCreate_R8 Test, ESMF_ArrayCreatGetUTest.F90, line 538
eGetUTest.F90, line 538
 Array Array name:  name: Array011          Array011                                                                                                                           
  PASS  A           
  PASS  rrayGet arrayspec from AArrayGet arrayspec frorray Copy (REF) Test, ESm Array Copy (REF) TeMF_ArrayCreateGetUTest.st, ESMF_ArrayCreateGeF90, line 546
tUTest.F90, line 546
  PASS  Verify A  PASS rraySpec returned from  Verify ArraySpec returArray Copy (REF), ESMF_Arned from Array Copy (RErayCreateGetUTest.F90, lineF), ESMF_ArrayCreateGetUT 552
 est.F90, line 552
 PASS  ArrayGet Fortran   PASS array pointer, from Array ArrayGet Fortran array  Copy (REF) Test, ESMF_Arrpointer, from Array Copy ayCreateGetUTest.F90, li(REF) Test, ESMF_Arrayne 559
CreateGetUTest.F90, line 559
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayCreateGetUTest.F90, line 575
  PASS  Verify Array vs Array Copy (REF) shared allocation Test1, ESMF_ArrayC  PASS reateGetUTest.F90, line 5 Verify Array vs Array C75
  PASS  Verify Array vs Arropy (REF) shared allocation Test1, ay Copy (REF) shared allESMF_ArrayCreateGetUTeocation Test2, ESMF_Arrayst.F90, line 575
CreateGetUTest.F90, line 593
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 600
  PASS  ArrayDestroy of Copy Test, ESMF_ArrayCreateGetUTest.F90, line 607
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr, ESMF_ArrayCreateGetUTest.F90, line 616
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x19dd8d0:
            rank = 3, typekind = 5, base_addr = 0x7fb99b54fc40
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayPrint for ArrayCreate from Ptr Test, ESMF_ArrayCreateGetUTest.F90, line 623
  PASS  ArrayGet Test, ESMF_ArrayCreateGetUTest.F90, line 630
  PASS  Deallocate returned pointer Test, ESMF_ArrayCreateGetUTest.F90, l  PASS  Verifyine 637
 Array vs Array Copy (REF)  PASS  ArrayDestroy Te shared allocation Testst, ESMF_ArrayCreateGet2, ESMF_ArrayCreateGetUUTest.F90, line 644
  PASS  Verify Array vTest.F90, line 593
s Array Copy (REF) sha  PASS  ArrayDestroy red allocation Test2, ETest, ESMF_ArrayCreateGSMF_ArrayCreateGetUTesetUTest.F90, line 600
t.F90, line 593
  PASS  Array  PASS  ArrayDestroyDestroy of Copy Test, ESM  PASS  ArrayCreate with 3D farray on Test, ESMF_ArrayCreateGetUTest.F90F_ArrayCreateGetUTest.F90, line 6 2D DistGrid Test, ESMF_ArrayCreateG, line 600
  PAS07
etUTest.F90, line 653
S  ArrayDestroy of Copy Test, ESMF  PASS  ArrayDestro_ArrayCreateGetUTest.Fy Test, ESMF_ArrayCreateG90, line 607
etUTest.F90, line 660
  PASS  ArrayCreate from Ptr with 3D farray on 2D DistGrid Test as Ptr,   PASS  ArrayCreate wiESMF_ArrayCreateGetUTth 3D farray on 2D DistGri  PASS  ArrayCreaest.F90, line 616
--- ESMCI::Array::print start ---
 Base name    = d w/ ESMF_DATACOPY_VALUE Test, ESMF_te from Ptr with 3D farray on 2D DMyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x27738d0:
            rank = 3, typekind = 5, base_addr = 0x7fe6310d2d30
ArrayCreateGetUTest.F90, line 671
istGrid Test as Ptr, ESMF_ArrayCre            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
ateGetUTest.F90, line (-2,12,10) =  0
(-1,12,10) =  0
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-2 [-2, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 11] 11] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGet616
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
  PASS  ArrayPrint for ArrayCreUTest.F90, line 678
 Root Info (Attributes):
{}Array typekind/rank: Real*4 / 3 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x23088d0:
            rank = 3, typekind = 5, base_addr = 0x7f8a3dc1fcd0
            dim[0] = 9  dim[1] = 12  dim[2] = 8  
  Real, *4, Dim 3, Data values:
(-2, 1, 3) =  0
(-1, 1, 3) =  0
ate from Ptr Test, ESMF_ArrayCreate( 0, 1, 3) =  0
( 1, 1, 3) =  0
( 2, 1, 3) =  0
( 3, 1, 3) =  0
( 4, 1, 3) =  0
( 5, 1, 3) =  0
( 6, 1, 3) =  0
(-2, 2, 3) =  0
  skipping to end ...
( 6,11,10) =  0
(-2,12,10) =  0
(-1,12,10) =  0
GetUTest.F90, line 623
( 0,12,10) =  0
( 1,12,10) =  0
( 2,12,10) =  0
( 3,12,10) =  0
( 4,12,10) =  0
( 5,12,10) =  0
( 6,12,10) =  0
dim 1: [0]: [-2 [-1 [-1, 5] 5] 6]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
dim 3: undistLBound[0]=3            undistUBound[0]=10
--- ESMCI::Array::print end ---
  PASS  Arra  PASS  ArrayGeyPrint for ArrayCreatet Test, ESMF_ArrayCreate  PASS  ArrayCreate with 3D farra from Ptr Test, ESMF_ArrayCreateGeGetUTest.F90, line 630
yPtr on 2D DistGrid w/ ESMF_DATACOPY_tUTest.F90, line 623
  PASS  Deallocate returnVALUE Test, ESMF_ArrayCreateGetUTe  PASS  ArrayGet Tested pointer Test, ESMF_ArrayCreatest.F90, line 689
 , ESMF_ArrayCreateGetUTest.F90, liGetUTest.F90, line 637
 PASS  ArrayDestroy Test, ESMF_ArrayCne 630
  PASS    PASS  ArrayDestroy Test, ESMFreateGetUTest.F90, line 696
Deallocate returned pointer Test, E_ArrayCreateGetUTest.F90, line 644SMF_ArrayCreateGetUTest.
F90, line 637
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGe  PASS  ArrayCreatUTest.F90, line 644
te with 3D farray on 2D DistGrid Test, ESMF_ArrayCreateGetUTest.F90, line 653
  PASS  PASS  ArrayCr  ArrayDestroy Test, ESeate with 3D farray onMF_ArrayCreateGetUTest.F 2D DistGrid Test, ESMF90, line 660
_ArrayCreateGetUTest.F90, line 653
  PASS  ArrayDestroy Test, ESMF_  PASS  ArrayCreate withArrayCreateGetUTest.F90, 3D farray on 2D DistGr  PASS  ArrayCreate with 3D farray on 2D DistGrid line 660
id w/ ESMF_DATACOPY_VALUE Test, E w/ distgridToArrayMap Test, ESMF_ArSMF_ArrayCreateGetUTest.rayCreateGetUTest.F90, lineF90, line 671
 708
  PASS   PASS  ArrayDestroy Test,   PASS  ArrayDestroy Test, ESMF_Arra ArrayCreate with 3D farray on 2D ESMF_ArrayCreateGetUTest.F90, linyCreateGetUTest.F90, line 715
DistGrid w/ ESMF_DATACOPY_VALUE e 678
Test, ESMF_ArrayCreate  PASS  ArrayCreate GetUTest.F90, line 671
Allocate 2D ESMF_TYPEKIND_R  PASS    PASS  ArrayCreate with 3D fa8 w/ negative computational widths TeArrayDestroy Test, ESMF_ArrayCreaterrayPtr on 2D DistGrid w/ ESMF_DATACst, ESMF_ArrayCreateGetUTest.F90, linGetUTest.F90, line 678
OPY_VALUE Test, ESMF_ArrayCreatee 725
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
GetUTest.F90, line 689 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x19e0790:
            rank = 2, typekind = 6, base_addr = 0x7fb99b54f6b0
            dim[0] = 7  
  PAdim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  6.93843e-310
(10,13) =  303
(11,13) =  303
(12,13) =  303
(13,13) =  303
(14,13) =  303
(15,13) =  303
( 9,14) =  303
(10,14) =  303
  PASS  ArrayDestroy Test, ESMF_ArrayC(11,14) =  303
  skipping to end ...
(13,22) =  303
(14,22) =  303
(15,22) =  303
( 9,23) =  303
(10,23) =  303
(11,23) =  303
(12,23) =  303
(13,23) =  303
(14,23) =  303
(15,23) =  -3.01583e+58
dim 1: [0]: [9 [10 [9, 15] 13] 15]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
  PSS  ArrayCreate with 3D farrayPtrreateGetUTest.F90, line 696
ASS  ArrayPrint 2D ESMF_TYPEKIND_R8 on 2D DistGrid w/ ESMF_DATACOPY w/ computational widths _VALUE Test, ESMF_ArrayCTest, ESMF_ArrayCreateGetreateGetUTest.F90, linUTest.F90, line 732
e 689
  PASS  A  PASS  ArrayDestroy Test, rrayDestroy Test, ESMF_AESMF_ArrayCreateGetUTestrrayCreateGetUTest.F90.F90, line 739
, line 696
  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8   PASS  Arrw/ computationalEdge widayCreate with 3D farray ths Test, ESMF_ArrayCreaton 2D DistGrid w/ distgeGetUTest.F90, line 748
ridToArrayMap Test, ESMF_--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):ArrayCreateGetUTest.F90,
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x19e0790:
            rank = 2, typekind = 6, base_addr = 0x7fb99b54fc40
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
 line 708
( 9,13) =  2.74283e-317
(10,13) =  3.53751e-321
(11,13) =  0
(12,13) =  0
(13,13) =  0
(14,13) =  0
(15,13) =  0
( 9,14) =  0
(10,14) =  0
(11,14) =  0
  skipping to end ...
(13,23) =  0
  PASS  ArrayDes(14,23) =  0
(15,23) =  0
( 9,24) =  0
(10,24) =  0
(11,24) =  0
(12,24) =  0
(13,24) =  0
(14,24) =  0
(15,24) =  0
dim 1: [0]: [9 [9 [9, 15] 13] 15]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
troy Test, ESMF_ArrayC  PASS  ArrayPrint 2D EreateGetUTest.F90, linSMF_TYPEKIND_R8 w/ computae 715
tionalEdge widths Test,   PASS  ESMF_ArrayCreateGetUTest.FArrayCreate Allocate 2D90, line 755
 ESMF_TYPEKIND_R8 w/ negative computational widt  PASS  ArrayGet  PASS  ArrayCreate withhs Test, ESMF_ArrayCreateGetUTest.F 2D ESMF_TYPEKIND_R8 w/ computationalE 3D farray on 2D DistGrid w/ distgr90, line 725
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready, dge widths Test, ESMF_ArrayCreateGetidToArrayMap Test, ESMF_ArrayCreat object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x27738d0:
            rank = 2, typekind = 6, base_addr = 0x7fe6310d2700
            dim[0] = 8  dim[1] = 11  
UTest.F90, line 768
eGetUTest.F90, line 708
  Real, *8, Dim 2, Data values:
( 1,13) =  6.94789e-310
( 2,13) =  302
( 3,13) =  302
( 4,13) =  302
( 5,13) =  302
( 6,13) =  302
( 7,13) =  302
( 8,13) =  302
( 1,14) =  302
( 2,14) =  302
  skipping to end ...
( 7,22) =  302
( 8,22) =  302
( 1,23) =  302
  PASS  Check total widths for 2D  PASS  ArrayDestroy( 2,23) =  302
( 3,23) =  302
( 4,23) =  302
( 5,23) =  302
( 6,23) =  302
( 7,23) =  302
( 8,23) =  -3.01583e+58
dim 1: [0]: [1 [2 [1, 8] 6] 8]
dim 2: [1]: [13 [14 [13, 23] 20] 23]
--- ESMCI::Array::print end ---
  PASS  ESMF_TYPEKIND_R8 w/ computational Test, ESMF_ArrayCreateGetUTest. ArrayPrint 2D ESMF_TYPEKIND_R8 wEdge widths Test, ESMF_ArrayCreateGeF90, line 715
/ computational widths Test, ESMtUTest.F90, line 778
  PASS  ArrayCreatF_ArrayCreateGetUTest.F90, line 73  PASS  ArrayDestroy Test, ESMF_Ae Allocate 2D ESMF_TYPEKIND_R8 w/ 2
  PASS  ArrayDesrrayCreateGetUTest.F90, line 787
negative computational widths Test,troy Test, ESMF_ArrayCreateGetUTes ESMF_ArrayCreateGetUTet.F90, line 739
st.F90, line 725
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
  PASS  ArrayCreate A{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x23088d0:
            rank = 2, typekind = 6, base_addr = 0x7f8a3dc1f6e0
            dim[0] = 7    PASS  ArrayCreate Allocallocate 2D ESMF_TYPEKIND_R8 w/ comdim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  6.92838e-310
(10, 1) =  301
(11, 1) =  301
(12, 1) =  301
(13, 1) =  301
(14, 1) =  301
(15, 1) =  301
( 9, 2) =  301
(10, 2) =  301
(11, 2) =  301
  skipping to end ...
(13,11) =  301
(14,11) =  301
te 2D ESMF_TYPEKIND_R8 w/ computatputationalEdge and total widths Test(15,11) =  301
( 9,12) =  301
(10,12) =  301
(11,12) =  301
(12,12) =  301
(13,12) =  301
(14,12) =  301
(15,12) =  -3.01583e+58
dim 1: [0]: [9 [10 [9, 15] 13] 15]
dim 2: [1]: [1 [2 [1, 12] 9] 12]
--- ESMCI::Array::print end ---
  PASS  ionalEdge widths Test, ESMF_ArrayC, ESMF_ArrayCreateGetUTest.F90, line 7ArrayPrint 2D ESMF_TYPEKIND_R8 w/ createGetUTest.F90, line 748
97
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}omputational widths Test, ESMF_Arr--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x19e0790:
            rank = 2, typekind = 6, base_addr = 0x7fb99b54fef0
            dim[0] = 11  dim[1] = 17  
  Real, *8, Dim 2, Data values:
( 8,11) =  0
( 9,11) =  0
(10,11) =  0
(11,11) =  0
(12,11) =  0
(13,11) =  0
(14,11) =  0
(15,11) =  0
ayCreateGetUTest.F90, line 732

DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x2779a80:
            rank = 2, typekind = 6, base_addr = 0x7fe6310d2d30
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1,13) =  2.74283e-317
( 2,13) =  3.53751e-321
( 3,13) =  0
( 4,13) =  0
( 5,13) =  0
( 6,13) =  0
( 7,13) =  0
(16,11) =  0
(17,11) =  0
  skipping to end ...
( 9,27) =  0
(10,27) =  0
(11,27) =  0
(12,27) =  0
(13,27) =  0
(14,27) =  0
(15,27) =  0
(16,27) =  0
(17,27) =  0
(18,27) =  0
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
    PASS  ArrayDest( 8,13) =  0
( 1,14) =  0
( 2,14) =  0
  skipping to end ...
( 7,23) =  0
( 8,23) =  0
( 1,24) =  0
( 2,24) =  0
( 3,24) =  0
( 4,24) =  0
( 5,24) =  0
( 6,24) =  0
( 7,24) =  0
( 8,24) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 24] 24]
--- ESMCI::Array::print end ---
PASS  ArrayPrint 2D ESMF_TYPEKIND_Rroy Test, ESMF_ArrayCreateGetUTe  PASS  ArrayPrint 2D ESMF_TYPE8 w/ computationalEdge and total st.F90, line 739
KIND_R8 w/ computationalEdge widwidths Test, ESMF_ArrayCreateGetUTths Test, ESMF_ArrayCrest.F90, line 804
  PASS  ArrayCreate AlleateGetUTest.F90, line 755
ocate 2D ESMF_TYPEKIN  PASS  ArrayGet 2D D_R8 w/ computationalEdgESMF_TYPEKIND_R8 w/ compe widths Test, ESMF_Ar  PASS  ArrayGet 2D ESMF_TYPEKINDutationalEdge and total widths Test,rayCreateGetUTest.F90, line 748
_R8 w/ computationalEdge widths T ESMF_ArrayCreateGetUTest.F90, lin--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}est, ESMF_ArrayCreateGetUTest.F9e 816
  PASS  Check Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x230ea80:
            rank = 2, typekind = 6, base_addr = 0x7f8a3dc1f6e0
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  6.92838e-310
(10, 1) =  301
(11, 1) =  301
(12, 1) =  301
(13, 1) =  301
0, line 768
  PAtotal widths for 2D ESMF_TYPEKIND_(14, 1) =  301
(15, 1) =  301
( 9, 2) =  301
(10, 2) =  301
(11, 2) =  301
  skipping to end ...
(13,11) =  301
(14,11) =  301
(15,11) =  301
( 9,12) =  301
(10,12) =  301
(11,12) =  301
(12,12) =  301
(13,12) =  301
(14,12) =  301
(15,12) =  -3.01583e+58
dim 1: [0]: [9 [9 [9, 15] 13] 15]
SS  Check total widths for 2D ESMFR8 w/ computationalEdge and total widdim 2: [1]: [1 [2 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint 2D ESMF__TYPEKIND_R8 w/ computationalEdgeths Test, ESMF_ArrayCreateGetUTestTYPEKIND_R8 w/ computationalEdge widths Test, ESMF_ArrayCreateGe.F90, line 824
 widths Test, ESMF_ArrayCreateGetUTest.F90, line 778
  PASS  Check total bounds for 2D EtUTest.F90, line 755
  PASS  ArrayDestroy Test, SMF_TYPEKIND_R8 w/ computationalEESMF_ArrayCreateGetUTesdge and total widths Test  PASS  ArrayGet 2D ESMFt.F90, line 787
, ESMF_ArrayCreateGetUTest.F90, lin_TYPEKIND_R8 w/ computationalEdgee 846
   widths Test, ESMF_ArraPASS  ArrayDestroy Test,yCreateGetUTest.F90, l ESMF_ArrayCreateGetUTest.ine 768
  PASS  ArrayCreate Allocate 2F90, line 855
  PASS  Check total widths for 2DD ESMF_TYPEKIND_R8 w/ computation ESMF_TYPEKIND_R8 w/ coalEdge and total widths  PASS  Create test Array with ESMF_PINmputationalEdge widths Test, ESM Test, ESMF_ArrayCreateGetUTest.F9_DE_TO_PET, ESMF_ArrayCreateGetUTest.F_ArrayCreateGetUTest.F90, line 770, line 797
--- ESMCI::Array::print start ---
 Base name    = MyArray Negative Edge
F90, line 864
  PA8
  PASS  ArrayD Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x2779a80:
            rank = 2, typekind = 6, base_addr = 0x7fe6310d3040
            dim[0] = 12  SS  ArrayGet Fortran array pointer festroy Test, ESMF_ArrayCreateGetUdim[1] = 17  
  Real, *8, Dim 2, Data values:
( 0,11) =  0
( 1,11) =  0
( 2,11) =  0
( 3,11) =  0
( 4,11) =  0
( 5,11) =  0
( 6,11) =  0
( 7,11) =  0
( 8,11) =  0
( 9,11) =  0
  skipping to end ...
( 2,27) =  0
( 3,27) =  0
( 4,27) =  0
( 5,27) =  0
( 6,27) =  0
( 7,27) =  0
or ESMF_PIN_DE_TO_PET Test, ESMF_ArrTest.F90, line 787
( 8,27) =  0
( 9,27) =  0
(10,27) =  0
(11,27) =  0
dim 1: [0]: [0 [1 [1, 8] 8] 11]
dim 2: [1]: [11 [13 [13, 23] 24] 27]
--- ESMCI::Array::print end ---
  PASS  ArrayPrayCreateGetUTest.F90, line 871
int 2D ESMF_TYPEKIND_R8 w/ computationalEdge and t  PASS  ArrayDestroy T  PASS  Aotal widths Test, ESMF_ArrayCreateGest for array with ESMF_PIN_DE_TO_PETrrayCreate Allocate 2D ESMF_TYPEKIetUTest.F90, line 804
, ESMF_ArrayCreateGetUTest.F90, line ND_R8 w/ computationalEdge and tota885
l widths Test, ESMF_Ar  PASS  ArrayGet 2D ESMF_TYPEKIrayCreateGetUTest.F90, lND_R8 w/ computationalEine 797
--- ESMCI::Array::print start ---
dge and total widths Test Base name    = MyArray Negative Edge
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
, ESMF_ArrayCreateGetUTdeCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x23088d0:
            rank = 2, typekind = 6, base_addr = 0x7f8a3dc1fcd0
            dim[0] = 11  dim[1] = 18  
  Real, *8, Dim 2, Data values:
( 8,-1) =  2.74283e-317
( 9,-1) =  3.53751e-321
est.F90, line 816
(10,-1) =  0
(11,-1) =  0
(12,-1) =  0
(13,-1) =  0
(14,-1) =  0
(15,-1) =  0
(16,-1) =  0
(17,-1) =  0
  skipping to end ...
( 9,16) =  0
(10,16) =  0
(11,16) =  0
(12,16) =  0
(13,16) =  0
(14,16) =  0
  PASS  Check t(15,16) =  0
(16,16) =  0
(17,16) =  0
(18,16) =  0
dim 1: [0]: [8 [9 [9, 15] 13] 18]
dim 2: [1]: [-1 [2 [1, 12] 12] 16]
--- ESMCI::Array::print end ---
  Potal widths for 2D ESMFASS  ArrayPrint 2D ESMF__TYPEKIND_R8 w/ computatiTYPEKIND_R8 w/ computationalEdge and total widthsonalEdge and total width Test, ESMF_ArrayCreates Test, ESMF_ArrayCreatGetUTest.F90, line 824
eGetUTest.F90, line 804
  PASS  Check total bound  PAs for 2D ESMF_TYPEKIND_RSS  ArrayGet 2D ESMF_TY8 w/ computationalEdge anPEKIND_R8 w/ computationad total widths Test, ESlEdge and total widthsMF_ArrayCreateGetUTest. Test, ESMF_ArrayCreateF90, line 842
GetUTest.F90, line 816  PASS  ArrayDe
  PASS  stroy Test, ESMF_ArrayCreCheck total widths for 2ateGetUTest.F90, line 8D ESMF_TYPEKIND_R8 w/ 55
computationalEdge and total widths T  PASS  Create test est, ESMF_ArrayCreateGeArray with ESMF_PIN_DEtUTest.F90, line 824
_TO_PET, ESMF_ArrayCre  PASSateGetUTest.F90, line 86  Check total bounds for4
  PASS 2D ESMF_TYPEKIND_R8 w/  ArrayGet Fortran array computationalEdge and t pointer for ESMF_PIN_Dotal widths Test, ESMFE_TO_PET Test, ESMF_Array_ArrayCreateGetUTest.F90CreateGetUTest.F90, line, line 838
 871
  PASS  ArrayDestroy Test, ESMF  PASS  ArrayDestro_ArrayCreateGetUTest.F9y Test for array with ES0, line 855
MF_PIN_DE_TO_PET, ESMF_ArrayCreateG  PASS  CretUTest.F90, line 885
eate test Array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 864
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_PET Test, ESMF_ArrayCreateGetUTest.F90, line 871
  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_PET, ESMF_ArrayCreateGetUTest.F90, line 885
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  Create test Array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 895
  PASS  ArrayGet Fortran 
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 907
  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI T  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_Arrayarray pointer for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 907
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI est, ESMF_ArrayCreateGetUTest.F90, line 907
CreateGetUTest.F90, line 907
Test, ESMF_ArrayCreateGetUTest.F90, line 925
  PASS  ArrayGet ssiLocalD  PASS  ArrayGet ssiLocalDeCount ESMF_PIN  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetU  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 944
eCount ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 925
_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 925
Test.F90, line 925
  PASS  ArrayGet local  PASS  ArrayGet localDeToDeM  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SDeToDeMap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, liap ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90SI Test, ESMF_ArrayCreateGetUTest.F90, line 944
ne 944
  PASS  ArraySync, line 944
  PASS  ArraySync() for ESMF  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Tes  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreate() for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 966
  PASS  LocalArrayG_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 966
t, ESMF_ArrayCreateGetUTest.F90, line 966
  PASS  LocaGetUTest.F90, line 966
  PASS  LocalArrayGet Fortran arrayet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, li  PASS  LocalArrayGet Fortran array pointer for last ssiLocalDe for lArrayGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_S pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGene 979
ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 979
SI Test, ESMF_ArrayCreateGetUTest.F90, line 979
tUTest.F90, line 979
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1009
  PASS  Tes  PASS  Test data in LocalArrt data in LocalArray for last ssiLocalDe foay for last ssiLocalDe for ESMF_PIN_DE_r ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCr  PASS  Test data in LocalArray for last ssiLocalDe foTO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1009
eateGetUTest.F90, line 1009
r ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1009
  PASS  Array  PASS  ArrayCreate fro  PASS  ArrayCreate from Copy (REF),   PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI TeCreate from Copy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
m Copy (REF), ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, ESMF_PIN_DE_TO_SSI Test, ESMF_ArrayCreateGetUTest.F90, line 1023
st, ESMF_ArrayCreateGetUTest.F90, line 1023
  PASS  Array  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.Fline 1023
  PASS  ArrayGet Fortran array pointer for ES  PASS  ArrayGet Fortran array pointer for ESMF_PIN_DE_TO_SSI Get Fortran array pointer for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCre90, line 1035
  PASS  ArrayGet ssiLocalDeCount ESMFMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035
arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1035
ateGetUTest.F90, line 1035
_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1053
  PASS  ArrayGet ssiLocalDeCoun  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_T  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI ar  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMt ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1053O_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1072
rayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1053
F_ArrayCreateGetUTest.F90, line 1053

  PASS  ArrayGet localDeToDeM  PASS  ArrayGet localDeToDeM  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TOap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateG_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, linetUTest.F90, line 1072
etUTest.F90, line 1072
 e 1072
  PASS  ArraySync()  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test,  for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateG  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1094_ArrayCreateGetUTest.F90, line 1094
  PASS  LocalArrayGet Fortran array pointer for last sESMF_ArrayCreateGetUTest.F90, line 1094
  PASS  LocalArraetUTest.F90, line 1094
  PASS  LocalArrayGet For
  PASS  LocalArrayGet Fortran array pointer for last ssiLocsiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1107
yGet Fortran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI atran array pointer for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy TesalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, lrrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1107
t, ESMF_ArrayCreateGetUTest.F90, line 1107
ine 1107
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1137
  PASS  Test data in LocalArray for last ssiLocalDe for ESM  PASS  Test data in LoF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArraycalArray for last ssiLocalDe for ESMCreateGetUTest.F90, line 1137
  PASS  Test data in LocalArray for last ssiF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTesLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy t.F90, line 1137
Test, ESMF_ArrayCreateGetUTest.F90, line 1137
  PASS  ArrayDestroy Test for arr  PASS  ArrayDestroy Test for arrayC  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI, ESMF_ArraayCpy with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
py with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1151
yCreateGetUTest.F90, line 1151
  P  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_Arra  PASS  ArrayCreate from Copy (REF  PASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SASS  ArrayCreate from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMyCreateGetUTest.F90, line 1166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 2
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1228280:
            rank = 2, typekind = 6, base_addr = 0x7fae479f4000
            dim[0] = 8  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 1, 1) =  0
), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, liSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1166
--- ESMCI::Array::print start ---
F_ArrayCreateGetUTest.F90, line 1166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
( 2, 1) =  0
( 3, 1) =  0
( 4, 1) =  0
( 5, 1) =  0
( 6, 1) =  0
( 7, 1) =  0
( 8, 1) =  0
( 1, 2) =  0
( 2, 2) =  0
  skipping to end ...
( 7,11) =  0
( 8,11) =  0
( 1,12) =  0
( 2,12) =  0
( 3,12) =  0
( 4,12) =  0
( 5,12) =  0
( 6,12) =  0
( 7,12) =  0
( 8,12) =  0
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x1247430:
            rank = 2, typekind = 6, base_addr = 0x7fae479f5000
            dim[0] = 7  dim[1] = 12  
  Real, *8, Dim 2, Data values:
( 9, 1) =  10
(10, 1) =  10
(11, 1) =  10
(12, 1) =  10
(13, 1) =  10
(14, 1) =  10
(15, 1) =  10
( 9, 2) =  10
(10, 2) =  10
(11, 2) =  10
  skipping to end ...
(13,11) =  10
(14,11) =  10
(15,11) =  10
( 9,12) =  10
(10,12) =  10
(11,12) =  10
(12,12) =  10
(13,12) =  10
(14,12) =  10
(15,12) =  10
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [1 [1 [1, 12] 12] 12]
--- ESMCI::Array::print end ---
  PASS  Arne 1166
--- ESMCI::Array::print start ---
 Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 0
--- ESMCI::Array::print end ---
  PAS Base name    = Array024
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 2
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x27805e0:
            rank = 2, typekind = 6, base_addr = 0x7fe63c529000
            dim[0] = 8  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 1,13) =  20
( 2,13) =  20
( 3,13) =  20
( 4,13) =  20
( 5,13) =  20
( 6,13) =  20
( 7,13) =  20
( 8,13) =  20
( 1,14) =  20
( 2,14) =  20
  skipping to end ...
( 7,22) =  20
( 8,22) =  20
( 1,23) =  20
{}Array typekind/rank: Real*8 / 2 
~ lower class' values ~
DistGrid dimCount = 2
deCount = 4
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELarayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_ArrayCreateGetUTest.F90, line 1177
S  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_( 2,23) =  20
( 3,23) =  20
( 4,23) =  20
( 5,23) =  20
( 6,23) =  20
( 7,23) =  20
( 8,23) =  20
dim 1: [0]: [1 [1 [1, 8] 8] 8]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x2780910:
            rank = 2, typekind = 6, base_addr = 0x7fe63c52a000
            dim[0] = 7  dim[1] = 11  
  Real, *8, Dim 2, Data values:
( 9,13) =  30
(10,13) =  30
(11,13) =  30
(12,13) =  30
(13,13) =  30
(14,13) =  30
(15,13) =  30
( 9,14) =  30
(10,14) =  30
(11,14) =  30
  skipping to end ...
(13,22) =  30
(14,22) =  30
(15,22) =  30
( 9,23) =  30
(10,23) =  30
(11,23) =  30
(12,23) =  30
(13,23) =  30
(14,23) =  30
(15,23) =  30
dim 1: [0]: [9 [9 [9, 15] 15] 15]
dim 2: [1]: [13 [13 [13, 23] 23] 23]
--- ESMCI::Array::print end ---
 yout Test, ESMF_ArrayCreateGetUTest.F90, line 1177
  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMFArrayCreateGetUTest.F90, line 1177
  PASS PASS  ArrayPrint from Copy (REF), ESMF_PIN_DE_TO_SSI w/ DELayout Test, ESMF_Ar  PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test,_ArrayCreateGetUTest.F90, line 1185
  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCrayCreateGetUTest.F90, line 1177
  ESMF_ArrayCreateGetUTest.F90, line 1185
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.reateGetUTest.F90, line 1185
 PASS  ArrayGet ssiLocalDeCount ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_Array  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy TesF90, line 1204
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrayCpy Test, ECreateGetUTest.F90, line 1185
t, ESMF_ArrayCreateGetUTest.F90, line 1204
  PASMF_ArrayCreateGetUTest.F90, line 1204
  PASS  ArrayGet localDeToDeMap ESMF_PIN_DE_TO_SSI arrSS  Test data in LocalArray for last ssiLocalDe for ESMF_P  PASS  Test data in LocalArray for last ssiLayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1204
IN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90,ocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_Arra line 1236
yCreateGetUTest.F90, line 1236
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
  PASS  Test data in LocalArray for last ssiLocalDe for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1236
  PASS  ArraySync() for ESMF_P  PASS  ArraySync() for ESMF_PIN_DE_T  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test  PASS  ArraySync() for ESMF_PIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateIN_DE_TO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250
  PASS  ArrayDesO_SSI arrayCpy Test, ESMF_ArrayCreateGetUTest.F90, line 1250
, ESMF_ArrayCreateGetUTest.F90, line 1250
  PASS  ArrGetUTest.F90, line 1250
  PASS  ArrayDestroy Test fotroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_ArrayCreateGetUTest.F90, line 1262
  PASS  ArrayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_ayDestroy Test for arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_Arr arrayCpy with ESMF_PIN_DE_TO_SSI w/ DELayout, ESMF_ArrayCreateGetUTestSSI w/ DELayout, ESMF_ArrayCreateGetUTest.F90, line 1rayCreateGetUTest.F90, line 1262
.F90, line 1262
  PASS  ArrayD262
  PASS  Arra  PASS  ArrayDestroy Test for array with E  PASS  ArrayDestroy Test for array with ESMF_PIN_DE_TO_SSestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
yDestroy Test for array with ESMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTeSMF_PIN_DE_TO_SSI, ESMF_ArrayCreateGetUTest.F90, line 1274
I, ESMF_ArrayCreateGetUTest.F90, line 1274
  PASS  ArrayCreatest.F90, line 1274
 AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateG  PASS  ArrayCreate AssmdSh  PASS  ArrayCreate AssmdShape 1D ESMF_TYetUTest.F90, line 1296
  PASS  ArrayGet Fortran array  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMFape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1296
PEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1296
 pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
_ArrayCreateGetUTest.F90, line 1296
  PASS  A  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKI  PASS  ArrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ES  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESrrayGet Fortran array pointer, 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreaND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1303
MF_ArrayCreateGetUTest.F90, line 1303
MF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
teGetUTest.F90, line 1303
LocalArrayPrint: Array at address 0x1246460:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint As  PASS  ArrayGet w/ incompatible Fortran array pointer, 1  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYsmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1317
  PASS  ArrayGet w/ incompatible Fortran array pointer, 1D ESMF_TYPEKID ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1310
PEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1324
ND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1310
--- ESMCI::Array::print start ---
 Base name    = Array028--- ESMCI::Array::print start ---
 Base name    = Array028
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x2781190:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
 
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x19eca00:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS   PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x2316500:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PA PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGet ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest, ESMF_ArrayCreateGetUTest.F90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1246460:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
SS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGeUTest.F90, line 1317
  PASS  ArrayDestroy Test, ESMF_Array.F90, line 1317
  PASS  ArrayDestroy Test, ESMF_ArrayCrea( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [2 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widthstUTest.F90, line 1317
  PASS  ArrayDestroy Test, ESMFCreateGetUTest.F90, line 1324
  PAteGetUTest.F90, line 1324
  PASS   Test, ESMF_ArrayCreateGetUTest.F90, line 1340
  PASS  ArrayDestroy Test, ESMF_ArrayCreat_ArrayCreateGetUTest.F90, line 1324
SS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge weGetUTest.F90, line 1347
  PASS  PASS  ArrayCreate AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative compuge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = idths Test, ESMF_ArrayCreateGetUTest.F90, line 1333
--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object =   ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
tationalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1333
Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 2 ~
LocalArrayPrint: Array at address 0x2781190:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPriReady
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 3 ~
LocalArrayPrint: Array at address 0x19eca00:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 9] 10]
--- ESMCI::Array::print end ---
  PASS  ArrayPrint   PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 13--- ESMCI::Array::print start ---
 Base name    = Array029
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 4
localDeCount = 1
~ local data in LocalArray for DE 1 ~
LocalArrayPrint: Array at address 0x2316500:
            rank = 1, typekind = 6, base_addr = 0x773f40
            dim[0] = 10  
  Real, *8, Dim 1, Data values:
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
( 5) =  0
( 6) =  0
( 7) =  0
( 8) =  0
( 9) =  0
(10) =  0
dim 1: [0]: [1 [1 [1, 10] 10] 10]
--- ESMCI::Array::print end ---
nt AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test,AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computationalEdge widths Test, ES73
  PASS  ArrayGet w/ incompatible Fortran   PASS  ArrayPrint AssmdShape 1D ESMF_TYPEKIND_R8 w/ negative computat ESMF_ArrayCreateGetUTest.F90, line 1340
  PASS  ArrayDestMF_ArrayCreateGetUTest.F90, line 1340
  PASS  ArrayDestroarray pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1380
  PASSionalEdge widths Test, ESMF_ArrayCreateGetUTest.F90, line 1340
roy Test, ESMF_ArrayCreateGetUTest.F90, line 1347
y Test, ESMF_ArrayCreateGetUTest.F90, line 1347
  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1387
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line   PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 T1347
  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreat  PASS  ArrayCreate AssmdShape 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreatest, ESMF_ArrayCreateGetUTest.F90, line 1406
  PASS  ArrayGet Fortran array pointer, 3D  PASS  ArrayCreate AssmdShape 2D ESMF_TYeGetUTest.F90, line 1366
  PASS  ArrayGet Fortran array poieGetUTest.F90, line 1366
  PASS  ArrayGet Fortran array po ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUTest.F90, line 1413
  PASS  ArrayDestroy TesPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1366
nter, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1373
inter, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 1373
t, ESMF_ArrayCreateGetUTest.F90, line 1420
  PASS  ArrayGet Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESM  PASS  ArrayCreate AssmdShape 4D ESMF_ArrayCreateGetUTest.F90, line 1373
  PASS  ArrayGet w/ incompatible Fortran array pointer, F_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, line 1439
2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCrea  PASS  ArrayGet w/ incompatible Fortran array pointer, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCre  PASS  ArrayGet Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayC  PASS  ArrayGet w/ incompatible Fortran array poteGetUTest.F90, line 1380
  PASS  ArrayDestroy Test, ESMF_AateGetUTest.F90, line 1380
  PASS  ArrayDestroy Test, ESMFreateGetUTest.F90, line 1446
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, lininter, 2D ESMF_TYPEKIND_R8 Test, ESMF_ArrayCreateGetUTest.F90, line 138rrayCreateGetUTest.F90, line 1387
_ArrayCreateGetUTest.F90, line 1387
e 1453
0
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESMF  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test,.F90, line 1387
_ArrayCreateGetUTest.F90, line 1406
  PA ESMF_ArrayCreateGetUTest.F90, line 1406
  PASS  Create test Array for extra edge element test, ESMF_ArrayCreateGetUTest.F90, l  PASS  ArrayCreate AssmdShape 3D ESMF_TYPEKIND_R4 Test, ESS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCrea  PASS  ArrayGet Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_Arrayine 1514
  PASS  ArrayDestroy TeSMF_ArrayCreateGetUTest.F90, line 1406
  PASS  ArrayGetteGetUTest.F90, line 1413
  PASS  ArrayDestroy Test, ESMF_CreateGetUTest.F90, line 1413
  PASS  ArrayDestroy Test, ESst, ESMF_ArrayCreateGetUTest.F90, line 1543
  PA Fortran array pointer, 3D ESMF_TYPEKIND_R4 Test, ESMF_ArrayCreateGetUArrayCreateGetUTest.F90, line 1420
MF_ArrayCreateGetUTest.F90, line 1420
SS  Create Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1562
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
Test.F90, line 1413
  PASS  ArrayDestroy Test, ESMF_Array Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 1
~ local data in LocalArray for DE 0 ~
LocalArrayPrint: Array at address 0x1246460:
            rank = 1, typekind = 6, base_addr = 0x7fae4c4d4320
            dim[0] = 4  
  Real, *8, Dim 1, Data values:
( 1) =  6.93603e-310
( 2) =  9.311e-13
( 3) =  -1.07501e+59
( 4) =  6.60776e-317
dim 1: [0]: [1 [1 [1, 4] 4] 4]
--- ESMCI::Array::print end ---
  PASS CreateGetUTest.F90, line 1420
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetU ArrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569
  PASS F90, line 1439
  PASS  ArrayGet FortTest.F90, line 1439
  PASS  ArrayGet ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1576
  PASS  ArrayCreate AssmdShape 4D ESMF_TYPEKIND_I4 Test, ESMFran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest.F90, Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGetUTest  PASS  Create Array on single DE DistGrid with Fortran allocation, ESMF_ArrayCreateGetUTest_ArrayCreateGetUTest.F90, line 1439
  PASS  Array line 1446
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetU.F90, line 1446
  PASS  ArrayDestroy Test, ESMF_ArrayCreat.F90, line 1592
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1599
Get Fortran array pointer, 4D ESMF_TYPEKIND_I4 Test, ESMF_ArrayCreateGeTest.F90, line 1453
eGetUTest.F90, line 1453
  PASS  Create Array on 4 DE DistGrid with only DE 0 elements,tUTest.F90, line 1446
  PASS  ArrayDestroy Test, ESMF_A with Fortran allocation, ESMF_ArrayCreateGetUTest.F90, rrayCreateGetUTest.F90, line 1453
line 1627
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line  PASS  Create test Array  1634
  Ending Test, file ESMF_ArrayCrfor extra edge element test, ESMF_ArrayC  PASS  Create test Array for extra edge element test, ESMF_AreateGetUTest.F90, line 1644
reateGetUTest.F90, line 1514
rayCreateGetUTest.F90, line 1514
  PASS  Create test Array fo  PASS  ArrayDestroy Test, ESMF_ArrayCr extra edge element test, ESMF_ArrayCreateGetUTest.F90, line 1543
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1543
reateGetUTest.F90, line 1514
  PASS  Create Array on single DE DistGrid, ESM  PASS  Create Array on single DE DistGrid  PASS  ArrayDestroy Test, ESMF_ArrayCreF_ArrayCreateGetUTest.F90, line 1562
--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready, , ESMF_ArrayCreateGetUTest.F90, line 1562
--- ESMCI::Array::print start ---
 Base name    = ateGetUTest.F90, line 1543
 object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on singleMyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  ArrayPrint Array on s  PASS  Create Array on single DE Di DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569
ingle DE DistGrid, ESMF_ArrayCreateGetUTest.F90, line 1569stGrid, ESMF_ArrayCreateGetUTest.F90, line 1562
  PASS  ArrayDestroy Test, ESMF_ArrayCre
  PASS  ArrayDestroy Test, ESMF_ArrayCr--- ESMCI::Array::print start ---
 Base name    = MyArray
 Status: Base = Ready,  object = Ready
 Proxy        = no
 Root Info (Attributes):
{}Array typekind/rank: Real*8 / 1 
~ lower class' values ~
DistGrid dimCount = 1
deCount = 1
localDeCount = 0
--- ESMCI::Array::print end ---
  PASS  AateGetUTest.F90, line 1576
 eateGetUTest.F90, line 1576
rrayPrint Array on single DE DistGrid, ESMF_ArrayCreateGe PASS  Create Array on single DE DistGrid with Fortran al  PASS  Create Array on single DE DistGrid with Fortran tUTest.F90, line 1569
  PASS  Arrlocation, ESMF_ArrayCreateGetUTest.F90, line 1592
allocation, ESMF_ArrayCreateGetUTest.F90, line 1592
ayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1  PASS  ArrayDestroy Test, ESMF_ArrayCreateGe  PASS  ArrayDestroy Test, ESMF_ArrayCreateG576
  PASS  Create ArtUTest.F90, line 1599
etUTest.F90, line 1599
ray on single DE DistGrid with Fortran allocation, E  PASS  Create Array on 4 DE DistGrid with  PASS  Create Array on 4 DE DistGrid witSMF_ArrayCreateGetUTest.F90, line 1592
 only DE 0 elements, with Fortran allocation, ESMF_Arrah only DE 0 elements, with Fortran allocation,  PASS  ArrayDestroy Test, ESMF_ArrayCreateGyCreateGetUTest.F90, line 1627
  PASS  Ar ESMF_ArrayCreateGetUTest.F90, line 1627
  etUTest.F90, line 1599
rayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 163PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line  PASS  Create Array on 4 DE DistGrid wi4
  Ending Test, file ESMF_ArrayCreateGe 1634
  Ending Test, file ESMF_ArrayCreatth only DE 0 elements, with Fortran allocation, ESMF_ArrtUTest.F90, line 1644
eGetUTest.F90, line 1644
ayCreateGetUTest.F90, line 1627
  PASS  ArrayDestroy Test, ESMF_ArrayCreateGetUTest.F90, line 1634
  Ending Test, file ESMF_ArrayCreateGetUTest.F90, line 1644
  PET 0  Test Elapsed Time   83.4230000000000018  msec.
  PET 1  Test Elapsed Time   47.1780000000000115  msec.
  PET 2  Test Elapsed Time   46.9849999999999994   PET 3  Test Elapsed T msec.
ime   46.8559999999999945  msec.
